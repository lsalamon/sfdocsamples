#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.18408
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace EpironChat
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="EpironChat")]
	public partial class EpironChatDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Definiciones de métodos de extensibilidad
    partial void OnCreated();
    partial void InsertUsers(Users instance);
    partial void UpdateUsers(Users instance);
    partial void DeleteUsers(Users instance);
    partial void InsertRecordCommentTemporary(RecordCommentTemporary instance);
    partial void UpdateRecordCommentTemporary(RecordCommentTemporary instance);
    partial void DeleteRecordCommentTemporary(RecordCommentTemporary instance);
    partial void InsertRecordSMS(RecordSMS instance);
    partial void UpdateRecordSMS(RecordSMS instance);
    partial void DeleteRecordSMS(RecordSMS instance);
    partial void InsertRecordSets(RecordSets instance);
    partial void UpdateRecordSets(RecordSets instance);
    partial void DeleteRecordSets(RecordSets instance);
    #endregion
		
		public EpironChatDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["EpironChatConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public EpironChatDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public EpironChatDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public EpironChatDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public EpironChatDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Users> Users
		{
			get
			{
				return this.GetTable<Users>();
			}
		}
		
		public System.Data.Linq.Table<RecordCommentTemporary> RecordCommentTemporary
		{
			get
			{
				return this.GetTable<RecordCommentTemporary>();
			}
		}
		
		public System.Data.Linq.Table<RecordSMS> RecordSMS
		{
			get
			{
				return this.GetTable<RecordSMS>();
			}
		}
		
		public System.Data.Linq.Table<RecordSets> RecordSets
		{
			get
			{
				return this.GetTable<RecordSets>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Security.Users")]
	public partial class Users : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UserId;
		
		private System.Nullable<System.Guid> _UserGUID;
		
		private string _Name;
		
		private bool _ActiveFlag;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
		private System.Nullable<int> _ModifiedByUserId;
		
		private string _LoweredName;
		
		private string _FirstName;
		
		private string _LastName;
		
		private string _DNI;
		
		private System.Nullable<bool> _MustChangePassword;
		
		private string _ExternalIdentifier;
		
		private EntitySet<RecordCommentTemporary> _RecordCommentTemporary;
		
		private EntitySet<RecordSets> _RecordSets;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIdChanging(int value);
    partial void OnUserIdChanged();
    partial void OnUserGUIDChanging(System.Nullable<System.Guid> value);
    partial void OnUserGUIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnActiveFlagChanging(bool value);
    partial void OnActiveFlagChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    partial void OnModifiedByUserIdChanging(System.Nullable<int> value);
    partial void OnModifiedByUserIdChanged();
    partial void OnLoweredNameChanging(string value);
    partial void OnLoweredNameChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnDNIChanging(string value);
    partial void OnDNIChanged();
    partial void OnMustChangePasswordChanging(System.Nullable<bool> value);
    partial void OnMustChangePasswordChanged();
    partial void OnExternalIdentifierChanging(string value);
    partial void OnExternalIdentifierChanged();
    #endregion
		
		public Users()
		{
			this._RecordCommentTemporary = new EntitySet<RecordCommentTemporary>(new Action<RecordCommentTemporary>(this.attach_RecordCommentTemporary), new Action<RecordCommentTemporary>(this.detach_RecordCommentTemporary));
			this._RecordSets = new EntitySet<RecordSets>(new Action<RecordSets>(this.attach_RecordSets), new Action<RecordSets>(this.detach_RecordSets));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserGUID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> UserGUID
		{
			get
			{
				return this._UserGUID;
			}
			set
			{
				if ((this._UserGUID != value))
				{
					this.OnUserGUIDChanging(value);
					this.SendPropertyChanging();
					this._UserGUID = value;
					this.SendPropertyChanged("UserGUID");
					this.OnUserGUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActiveFlag", DbType="Bit NOT NULL")]
		public bool ActiveFlag
		{
			get
			{
				return this._ActiveFlag;
			}
			set
			{
				if ((this._ActiveFlag != value))
				{
					this.OnActiveFlagChanging(value);
					this.SendPropertyChanging();
					this._ActiveFlag = value;
					this.SendPropertyChanged("ActiveFlag");
					this.OnActiveFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedByUserId", DbType="Int")]
		public System.Nullable<int> ModifiedByUserId
		{
			get
			{
				return this._ModifiedByUserId;
			}
			set
			{
				if ((this._ModifiedByUserId != value))
				{
					this.OnModifiedByUserIdChanging(value);
					this.SendPropertyChanging();
					this._ModifiedByUserId = value;
					this.SendPropertyChanged("ModifiedByUserId");
					this.OnModifiedByUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoweredName", DbType="NVarChar(50)")]
		public string LoweredName
		{
			get
			{
				return this._LoweredName;
			}
			set
			{
				if ((this._LoweredName != value))
				{
					this.OnLoweredNameChanging(value);
					this.SendPropertyChanging();
					this._LoweredName = value;
					this.SendPropertyChanged("LoweredName");
					this.OnLoweredNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="NVarChar(50)")]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="NVarChar(50)")]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DNI", DbType="NVarChar(8)")]
		public string DNI
		{
			get
			{
				return this._DNI;
			}
			set
			{
				if ((this._DNI != value))
				{
					this.OnDNIChanging(value);
					this.SendPropertyChanging();
					this._DNI = value;
					this.SendPropertyChanged("DNI");
					this.OnDNIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MustChangePassword", DbType="Bit")]
		public System.Nullable<bool> MustChangePassword
		{
			get
			{
				return this._MustChangePassword;
			}
			set
			{
				if ((this._MustChangePassword != value))
				{
					this.OnMustChangePasswordChanging(value);
					this.SendPropertyChanging();
					this._MustChangePassword = value;
					this.SendPropertyChanged("MustChangePassword");
					this.OnMustChangePasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExternalIdentifier", DbType="NVarChar(50)")]
		public string ExternalIdentifier
		{
			get
			{
				return this._ExternalIdentifier;
			}
			set
			{
				if ((this._ExternalIdentifier != value))
				{
					this.OnExternalIdentifierChanging(value);
					this.SendPropertyChanging();
					this._ExternalIdentifier = value;
					this.SendPropertyChanged("ExternalIdentifier");
					this.OnExternalIdentifierChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Users_RecordCommentTemporary", Storage="_RecordCommentTemporary", ThisKey="UserId", OtherKey="ModifiedByUserId")]
		public EntitySet<RecordCommentTemporary> RecordCommentTemporary
		{
			get
			{
				return this._RecordCommentTemporary;
			}
			set
			{
				this._RecordCommentTemporary.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Users_RecordSets", Storage="_RecordSets", ThisKey="UserId", OtherKey="ModifiedByUserId")]
		public EntitySet<RecordSets> RecordSets
		{
			get
			{
				return this._RecordSets;
			}
			set
			{
				this._RecordSets.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_RecordCommentTemporary(RecordCommentTemporary entity)
		{
			this.SendPropertyChanging();
			entity.Users = this;
		}
		
		private void detach_RecordCommentTemporary(RecordCommentTemporary entity)
		{
			this.SendPropertyChanging();
			entity.Users = null;
		}
		
		private void attach_RecordSets(RecordSets entity)
		{
			this.SendPropertyChanging();
			entity.Users = this;
		}
		
		private void detach_RecordSets(RecordSets entity)
		{
			this.SendPropertyChanging();
			entity.Users = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="SocialNetwork.RecordCommentTemporary")]
	public partial class RecordCommentTemporary : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _CommentId;
		
		private string _Comment;
		
		private System.Nullable<int> _SocialNetworkId;
		
		private string _SourcePostDestino;
		
		private System.Nullable<System.DateTime> _PostDate;
		
		private System.DateTime _CreatedDate;
		
		private bool _PostedByService;
		
		private int _PCItemType;
		
		private string _Error;
		
		private int _RetriesQuantity;
		
		private System.Nullable<int> _ErrorId;
		
		private System.Nullable<int> _ModifiedByUserId;
		
		private System.DateTime _ModifiedDate;
		
		private System.Nullable<int> _RecordId;
		
		private string _Origen;
		
		private string _Subject;
		
		private bool _AwaitingUserConfirmation;
		
		private System.Nullable<System.DateTime> _ProcessStart;
		
		private System.Nullable<System.DateTime> _ProcessEnd;
		
		private System.Nullable<int> _KeepconValidation;
		
		private EntityRef<Users> _Users;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnCommentIdChanging(int value);
    partial void OnCommentIdChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    partial void OnSocialNetworkIdChanging(System.Nullable<int> value);
    partial void OnSocialNetworkIdChanged();
    partial void OnSourcePostDestinoChanging(string value);
    partial void OnSourcePostDestinoChanged();
    partial void OnPostDateChanging(System.Nullable<System.DateTime> value);
    partial void OnPostDateChanged();
    partial void OnCreatedDateChanging(System.DateTime value);
    partial void OnCreatedDateChanged();
    partial void OnPostedByServiceChanging(bool value);
    partial void OnPostedByServiceChanged();
    partial void OnPCItemTypeChanging(int value);
    partial void OnPCItemTypeChanged();
    partial void OnErrorChanging(string value);
    partial void OnErrorChanged();
    partial void OnRetriesQuantityChanging(int value);
    partial void OnRetriesQuantityChanged();
    partial void OnErrorIdChanging(System.Nullable<int> value);
    partial void OnErrorIdChanged();
    partial void OnModifiedByUserIdChanging(System.Nullable<int> value);
    partial void OnModifiedByUserIdChanged();
    partial void OnModifiedDateChanging(System.DateTime value);
    partial void OnModifiedDateChanged();
    partial void OnRecordIdChanging(System.Nullable<int> value);
    partial void OnRecordIdChanged();
    partial void OnOrigenChanging(string value);
    partial void OnOrigenChanged();
    partial void OnSubjectChanging(string value);
    partial void OnSubjectChanged();
    partial void OnAwaitingUserConfirmationChanging(bool value);
    partial void OnAwaitingUserConfirmationChanged();
    partial void OnProcessStartChanging(System.Nullable<System.DateTime> value);
    partial void OnProcessStartChanged();
    partial void OnProcessEndChanging(System.Nullable<System.DateTime> value);
    partial void OnProcessEndChanged();
    partial void OnKeepconValidationChanging(System.Nullable<int> value);
    partial void OnKeepconValidationChanged();
    #endregion
		
		public RecordCommentTemporary()
		{
			this._Users = default(EntityRef<Users>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CommentId", DbType="Int NOT NULL")]
		public int CommentId
		{
			get
			{
				return this._CommentId;
			}
			set
			{
				if ((this._CommentId != value))
				{
					this.OnCommentIdChanging(value);
					this.SendPropertyChanging();
					this._CommentId = value;
					this.SendPropertyChanged("CommentId");
					this.OnCommentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SocialNetworkId", DbType="Int")]
		public System.Nullable<int> SocialNetworkId
		{
			get
			{
				return this._SocialNetworkId;
			}
			set
			{
				if ((this._SocialNetworkId != value))
				{
					this.OnSocialNetworkIdChanging(value);
					this.SendPropertyChanging();
					this._SocialNetworkId = value;
					this.SendPropertyChanged("SocialNetworkId");
					this.OnSocialNetworkIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SourcePostDestino", DbType="VarChar(256) NOT NULL", CanBeNull=false)]
		public string SourcePostDestino
		{
			get
			{
				return this._SourcePostDestino;
			}
			set
			{
				if ((this._SourcePostDestino != value))
				{
					this.OnSourcePostDestinoChanging(value);
					this.SendPropertyChanging();
					this._SourcePostDestino = value;
					this.SendPropertyChanged("SourcePostDestino");
					this.OnSourcePostDestinoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> PostDate
		{
			get
			{
				return this._PostDate;
			}
			set
			{
				if ((this._PostDate != value))
				{
					this.OnPostDateChanging(value);
					this.SendPropertyChanging();
					this._PostDate = value;
					this.SendPropertyChanged("PostDate");
					this.OnPostDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostedByService", DbType="Bit NOT NULL")]
		public bool PostedByService
		{
			get
			{
				return this._PostedByService;
			}
			set
			{
				if ((this._PostedByService != value))
				{
					this.OnPostedByServiceChanging(value);
					this.SendPropertyChanging();
					this._PostedByService = value;
					this.SendPropertyChanged("PostedByService");
					this.OnPostedByServiceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PCItemType", DbType="Int NOT NULL")]
		public int PCItemType
		{
			get
			{
				return this._PCItemType;
			}
			set
			{
				if ((this._PCItemType != value))
				{
					this.OnPCItemTypeChanging(value);
					this.SendPropertyChanging();
					this._PCItemType = value;
					this.SendPropertyChanged("PCItemType");
					this.OnPCItemTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Error", DbType="VarChar(MAX)")]
		public string Error
		{
			get
			{
				return this._Error;
			}
			set
			{
				if ((this._Error != value))
				{
					this.OnErrorChanging(value);
					this.SendPropertyChanging();
					this._Error = value;
					this.SendPropertyChanged("Error");
					this.OnErrorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RetriesQuantity", DbType="Int NOT NULL")]
		public int RetriesQuantity
		{
			get
			{
				return this._RetriesQuantity;
			}
			set
			{
				if ((this._RetriesQuantity != value))
				{
					this.OnRetriesQuantityChanging(value);
					this.SendPropertyChanging();
					this._RetriesQuantity = value;
					this.SendPropertyChanged("RetriesQuantity");
					this.OnRetriesQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ErrorId", DbType="Int")]
		public System.Nullable<int> ErrorId
		{
			get
			{
				return this._ErrorId;
			}
			set
			{
				if ((this._ErrorId != value))
				{
					this.OnErrorIdChanging(value);
					this.SendPropertyChanging();
					this._ErrorId = value;
					this.SendPropertyChanged("ErrorId");
					this.OnErrorIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedByUserId", DbType="Int")]
		public System.Nullable<int> ModifiedByUserId
		{
			get
			{
				return this._ModifiedByUserId;
			}
			set
			{
				if ((this._ModifiedByUserId != value))
				{
					if (this._Users.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnModifiedByUserIdChanging(value);
					this.SendPropertyChanging();
					this._ModifiedByUserId = value;
					this.SendPropertyChanged("ModifiedByUserId");
					this.OnModifiedByUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime NOT NULL")]
		public System.DateTime ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecordId", DbType="Int")]
		public System.Nullable<int> RecordId
		{
			get
			{
				return this._RecordId;
			}
			set
			{
				if ((this._RecordId != value))
				{
					this.OnRecordIdChanging(value);
					this.SendPropertyChanging();
					this._RecordId = value;
					this.SendPropertyChanged("RecordId");
					this.OnRecordIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Origen", DbType="VarChar(256)")]
		public string Origen
		{
			get
			{
				return this._Origen;
			}
			set
			{
				if ((this._Origen != value))
				{
					this.OnOrigenChanging(value);
					this.SendPropertyChanging();
					this._Origen = value;
					this.SendPropertyChanged("Origen");
					this.OnOrigenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Subject", DbType="VarChar(256)")]
		public string Subject
		{
			get
			{
				return this._Subject;
			}
			set
			{
				if ((this._Subject != value))
				{
					this.OnSubjectChanging(value);
					this.SendPropertyChanging();
					this._Subject = value;
					this.SendPropertyChanged("Subject");
					this.OnSubjectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AwaitingUserConfirmation", DbType="Bit NOT NULL")]
		public bool AwaitingUserConfirmation
		{
			get
			{
				return this._AwaitingUserConfirmation;
			}
			set
			{
				if ((this._AwaitingUserConfirmation != value))
				{
					this.OnAwaitingUserConfirmationChanging(value);
					this.SendPropertyChanging();
					this._AwaitingUserConfirmation = value;
					this.SendPropertyChanged("AwaitingUserConfirmation");
					this.OnAwaitingUserConfirmationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProcessStart", DbType="DateTime")]
		public System.Nullable<System.DateTime> ProcessStart
		{
			get
			{
				return this._ProcessStart;
			}
			set
			{
				if ((this._ProcessStart != value))
				{
					this.OnProcessStartChanging(value);
					this.SendPropertyChanging();
					this._ProcessStart = value;
					this.SendPropertyChanged("ProcessStart");
					this.OnProcessStartChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProcessEnd", DbType="DateTime")]
		public System.Nullable<System.DateTime> ProcessEnd
		{
			get
			{
				return this._ProcessEnd;
			}
			set
			{
				if ((this._ProcessEnd != value))
				{
					this.OnProcessEndChanging(value);
					this.SendPropertyChanging();
					this._ProcessEnd = value;
					this.SendPropertyChanged("ProcessEnd");
					this.OnProcessEndChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KeepconValidation", DbType="Int")]
		public System.Nullable<int> KeepconValidation
		{
			get
			{
				return this._KeepconValidation;
			}
			set
			{
				if ((this._KeepconValidation != value))
				{
					this.OnKeepconValidationChanging(value);
					this.SendPropertyChanging();
					this._KeepconValidation = value;
					this.SendPropertyChanged("KeepconValidation");
					this.OnKeepconValidationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Users_RecordCommentTemporary", Storage="_Users", ThisKey="ModifiedByUserId", OtherKey="UserId", IsForeignKey=true)]
		public Users Users
		{
			get
			{
				return this._Users.Entity;
			}
			set
			{
				Users previousValue = this._Users.Entity;
				if (((previousValue != value) 
							|| (this._Users.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Users.Entity = null;
						previousValue.RecordCommentTemporary.Remove(this);
					}
					this._Users.Entity = value;
					if ((value != null))
					{
						value.RecordCommentTemporary.Add(this);
						this._ModifiedByUserId = value.UserId;
					}
					else
					{
						this._ModifiedByUserId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Users");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="SMS.RecordSMS")]
	public partial class RecordSMS : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RecorduserId;
		
		private int _RecordId;
		
		private int _SourceuserId;
		
		private int _HomePhone;
		
		private int _DestinationPhone;
		
		private System.DateTime _CreatedRecordSMS;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRecorduserIdChanging(int value);
    partial void OnRecorduserIdChanged();
    partial void OnRecordIdChanging(int value);
    partial void OnRecordIdChanged();
    partial void OnSourceuserIdChanging(int value);
    partial void OnSourceuserIdChanged();
    partial void OnHomePhoneChanging(int value);
    partial void OnHomePhoneChanged();
    partial void OnDestinationPhoneChanging(int value);
    partial void OnDestinationPhoneChanged();
    partial void OnCreatedRecordSMSChanging(System.DateTime value);
    partial void OnCreatedRecordSMSChanged();
    #endregion
		
		public RecordSMS()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecorduserId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int RecorduserId
		{
			get
			{
				return this._RecorduserId;
			}
			set
			{
				if ((this._RecorduserId != value))
				{
					this.OnRecorduserIdChanging(value);
					this.SendPropertyChanging();
					this._RecorduserId = value;
					this.SendPropertyChanged("RecorduserId");
					this.OnRecorduserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecordId", DbType="Int NOT NULL")]
		public int RecordId
		{
			get
			{
				return this._RecordId;
			}
			set
			{
				if ((this._RecordId != value))
				{
					this.OnRecordIdChanging(value);
					this.SendPropertyChanging();
					this._RecordId = value;
					this.SendPropertyChanged("RecordId");
					this.OnRecordIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SourceuserId", DbType="Int NOT NULL")]
		public int SourceuserId
		{
			get
			{
				return this._SourceuserId;
			}
			set
			{
				if ((this._SourceuserId != value))
				{
					this.OnSourceuserIdChanging(value);
					this.SendPropertyChanging();
					this._SourceuserId = value;
					this.SendPropertyChanged("SourceuserId");
					this.OnSourceuserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HomePhone", DbType="Int NOT NULL")]
		public int HomePhone
		{
			get
			{
				return this._HomePhone;
			}
			set
			{
				if ((this._HomePhone != value))
				{
					this.OnHomePhoneChanging(value);
					this.SendPropertyChanging();
					this._HomePhone = value;
					this.SendPropertyChanged("HomePhone");
					this.OnHomePhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DestinationPhone", DbType="Int NOT NULL")]
		public int DestinationPhone
		{
			get
			{
				return this._DestinationPhone;
			}
			set
			{
				if ((this._DestinationPhone != value))
				{
					this.OnDestinationPhoneChanging(value);
					this.SendPropertyChanging();
					this._DestinationPhone = value;
					this.SendPropertyChanged("DestinationPhone");
					this.OnDestinationPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedRecordSMS", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedRecordSMS
		{
			get
			{
				return this._CreatedRecordSMS;
			}
			set
			{
				if ((this._CreatedRecordSMS != value))
				{
					this.OnCreatedRecordSMSChanging(value);
					this.SendPropertyChanging();
					this._CreatedRecordSMS = value;
					this.SendPropertyChanged("CreatedRecordSMS");
					this.OnCreatedRecordSMSChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Campaings.RecordSets")]
	public partial class RecordSets : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RecordSetId;
		
		private string _Name;
		
		private bool _ActiveFlag;
		
		private System.DateTime _ModifiedDate;
		
		private int _ModifiedByUserId;
		
		private System.Nullable<System.DateTime> _StartDate;
		
		private System.Nullable<System.DateTime> _EndDate;
		
		private System.DateTime _CreatedDate;
		
		private System.Nullable<int> _ClosedQuantityGoal;
		
		private System.Nullable<int> _SurveyQuantityGoal;
		
		private int _PCRecordSetState;
		
		private int _CampaingId;
		
		private System.Nullable<bool> _AddNewRecordFlag;
		
		private System.Nullable<bool> _AllowEditAttributeFlag;
		
		private System.Nullable<int> _SurveyId;
		
		private int _ImportedRecords;
		
		private int _NewRecordsAdded;
		
		private int _RecordsClosed;
		
		private int _SurveysCompleted;
		
		private System.Nullable<int> _PCObservationType;
		
		private System.Nullable<int> _MaxDaysScheduleRegister;
		
		private System.Nullable<int> _ClosureStateByMaxDays;
		
		private System.Nullable<int> _MaxRecalls;
		
		private System.Nullable<int> _ClosureStateByRecalls;
		
		private int _ReleaseRecordTime;
		
		private bool _SocialNetworkRequired;
		
		private bool _ConvertMessageToCase;
		
		private bool _ConvertEMailsToCase;
		
		private bool _MergeEmails;
		
		private System.Nullable<bool> _MergeSMS;
		
		private System.Nullable<bool> _ConvertSMSToCase;
		
		private EntityRef<Users> _Users;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRecordSetIdChanging(int value);
    partial void OnRecordSetIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnActiveFlagChanging(bool value);
    partial void OnActiveFlagChanged();
    partial void OnModifiedDateChanging(System.DateTime value);
    partial void OnModifiedDateChanged();
    partial void OnModifiedByUserIdChanging(int value);
    partial void OnModifiedByUserIdChanged();
    partial void OnStartDateChanging(System.Nullable<System.DateTime> value);
    partial void OnStartDateChanged();
    partial void OnEndDateChanging(System.Nullable<System.DateTime> value);
    partial void OnEndDateChanged();
    partial void OnCreatedDateChanging(System.DateTime value);
    partial void OnCreatedDateChanged();
    partial void OnClosedQuantityGoalChanging(System.Nullable<int> value);
    partial void OnClosedQuantityGoalChanged();
    partial void OnSurveyQuantityGoalChanging(System.Nullable<int> value);
    partial void OnSurveyQuantityGoalChanged();
    partial void OnPCRecordSetStateChanging(int value);
    partial void OnPCRecordSetStateChanged();
    partial void OnCampaingIdChanging(int value);
    partial void OnCampaingIdChanged();
    partial void OnAddNewRecordFlagChanging(System.Nullable<bool> value);
    partial void OnAddNewRecordFlagChanged();
    partial void OnAllowEditAttributeFlagChanging(System.Nullable<bool> value);
    partial void OnAllowEditAttributeFlagChanged();
    partial void OnSurveyIdChanging(System.Nullable<int> value);
    partial void OnSurveyIdChanged();
    partial void OnImportedRecordsChanging(int value);
    partial void OnImportedRecordsChanged();
    partial void OnNewRecordsAddedChanging(int value);
    partial void OnNewRecordsAddedChanged();
    partial void OnRecordsClosedChanging(int value);
    partial void OnRecordsClosedChanged();
    partial void OnSurveysCompletedChanging(int value);
    partial void OnSurveysCompletedChanged();
    partial void OnPCObservationTypeChanging(System.Nullable<int> value);
    partial void OnPCObservationTypeChanged();
    partial void OnMaxDaysScheduleRegisterChanging(System.Nullable<int> value);
    partial void OnMaxDaysScheduleRegisterChanged();
    partial void OnClosureStateByMaxDaysChanging(System.Nullable<int> value);
    partial void OnClosureStateByMaxDaysChanged();
    partial void OnMaxRecallsChanging(System.Nullable<int> value);
    partial void OnMaxRecallsChanged();
    partial void OnClosureStateByRecallsChanging(System.Nullable<int> value);
    partial void OnClosureStateByRecallsChanged();
    partial void OnReleaseRecordTimeChanging(int value);
    partial void OnReleaseRecordTimeChanged();
    partial void OnSocialNetworkRequiredChanging(bool value);
    partial void OnSocialNetworkRequiredChanged();
    partial void OnConvertMessageToCaseChanging(bool value);
    partial void OnConvertMessageToCaseChanged();
    partial void OnConvertEMailsToCaseChanging(bool value);
    partial void OnConvertEMailsToCaseChanged();
    partial void OnMergeEmailsChanging(bool value);
    partial void OnMergeEmailsChanged();
    partial void OnMergeSMSChanging(System.Nullable<bool> value);
    partial void OnMergeSMSChanged();
    partial void OnConvertSMSToCaseChanging(System.Nullable<bool> value);
    partial void OnConvertSMSToCaseChanged();
    #endregion
		
		public RecordSets()
		{
			this._Users = default(EntityRef<Users>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecordSetId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int RecordSetId
		{
			get
			{
				return this._RecordSetId;
			}
			set
			{
				if ((this._RecordSetId != value))
				{
					this.OnRecordSetIdChanging(value);
					this.SendPropertyChanging();
					this._RecordSetId = value;
					this.SendPropertyChanged("RecordSetId");
					this.OnRecordSetIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActiveFlag", DbType="Bit NOT NULL")]
		public bool ActiveFlag
		{
			get
			{
				return this._ActiveFlag;
			}
			set
			{
				if ((this._ActiveFlag != value))
				{
					this.OnActiveFlagChanging(value);
					this.SendPropertyChanging();
					this._ActiveFlag = value;
					this.SendPropertyChanged("ActiveFlag");
					this.OnActiveFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime NOT NULL")]
		public System.DateTime ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedByUserId", DbType="Int NOT NULL")]
		public int ModifiedByUserId
		{
			get
			{
				return this._ModifiedByUserId;
			}
			set
			{
				if ((this._ModifiedByUserId != value))
				{
					if (this._Users.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnModifiedByUserIdChanging(value);
					this.SendPropertyChanging();
					this._ModifiedByUserId = value;
					this.SendPropertyChanged("ModifiedByUserId");
					this.OnModifiedByUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this.OnStartDateChanging(value);
					this.SendPropertyChanging();
					this._StartDate = value;
					this.SendPropertyChanged("StartDate");
					this.OnStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> EndDate
		{
			get
			{
				return this._EndDate;
			}
			set
			{
				if ((this._EndDate != value))
				{
					this.OnEndDateChanging(value);
					this.SendPropertyChanging();
					this._EndDate = value;
					this.SendPropertyChanged("EndDate");
					this.OnEndDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClosedQuantityGoal", DbType="Int")]
		public System.Nullable<int> ClosedQuantityGoal
		{
			get
			{
				return this._ClosedQuantityGoal;
			}
			set
			{
				if ((this._ClosedQuantityGoal != value))
				{
					this.OnClosedQuantityGoalChanging(value);
					this.SendPropertyChanging();
					this._ClosedQuantityGoal = value;
					this.SendPropertyChanged("ClosedQuantityGoal");
					this.OnClosedQuantityGoalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SurveyQuantityGoal", DbType="Int")]
		public System.Nullable<int> SurveyQuantityGoal
		{
			get
			{
				return this._SurveyQuantityGoal;
			}
			set
			{
				if ((this._SurveyQuantityGoal != value))
				{
					this.OnSurveyQuantityGoalChanging(value);
					this.SendPropertyChanging();
					this._SurveyQuantityGoal = value;
					this.SendPropertyChanged("SurveyQuantityGoal");
					this.OnSurveyQuantityGoalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PCRecordSetState", DbType="Int NOT NULL")]
		public int PCRecordSetState
		{
			get
			{
				return this._PCRecordSetState;
			}
			set
			{
				if ((this._PCRecordSetState != value))
				{
					this.OnPCRecordSetStateChanging(value);
					this.SendPropertyChanging();
					this._PCRecordSetState = value;
					this.SendPropertyChanged("PCRecordSetState");
					this.OnPCRecordSetStateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampaingId", DbType="Int NOT NULL")]
		public int CampaingId
		{
			get
			{
				return this._CampaingId;
			}
			set
			{
				if ((this._CampaingId != value))
				{
					this.OnCampaingIdChanging(value);
					this.SendPropertyChanging();
					this._CampaingId = value;
					this.SendPropertyChanged("CampaingId");
					this.OnCampaingIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddNewRecordFlag", DbType="Bit")]
		public System.Nullable<bool> AddNewRecordFlag
		{
			get
			{
				return this._AddNewRecordFlag;
			}
			set
			{
				if ((this._AddNewRecordFlag != value))
				{
					this.OnAddNewRecordFlagChanging(value);
					this.SendPropertyChanging();
					this._AddNewRecordFlag = value;
					this.SendPropertyChanged("AddNewRecordFlag");
					this.OnAddNewRecordFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllowEditAttributeFlag", DbType="Bit")]
		public System.Nullable<bool> AllowEditAttributeFlag
		{
			get
			{
				return this._AllowEditAttributeFlag;
			}
			set
			{
				if ((this._AllowEditAttributeFlag != value))
				{
					this.OnAllowEditAttributeFlagChanging(value);
					this.SendPropertyChanging();
					this._AllowEditAttributeFlag = value;
					this.SendPropertyChanged("AllowEditAttributeFlag");
					this.OnAllowEditAttributeFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SurveyId", DbType="Int")]
		public System.Nullable<int> SurveyId
		{
			get
			{
				return this._SurveyId;
			}
			set
			{
				if ((this._SurveyId != value))
				{
					this.OnSurveyIdChanging(value);
					this.SendPropertyChanging();
					this._SurveyId = value;
					this.SendPropertyChanged("SurveyId");
					this.OnSurveyIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImportedRecords", DbType="Int NOT NULL")]
		public int ImportedRecords
		{
			get
			{
				return this._ImportedRecords;
			}
			set
			{
				if ((this._ImportedRecords != value))
				{
					this.OnImportedRecordsChanging(value);
					this.SendPropertyChanging();
					this._ImportedRecords = value;
					this.SendPropertyChanged("ImportedRecords");
					this.OnImportedRecordsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewRecordsAdded", DbType="Int NOT NULL")]
		public int NewRecordsAdded
		{
			get
			{
				return this._NewRecordsAdded;
			}
			set
			{
				if ((this._NewRecordsAdded != value))
				{
					this.OnNewRecordsAddedChanging(value);
					this.SendPropertyChanging();
					this._NewRecordsAdded = value;
					this.SendPropertyChanged("NewRecordsAdded");
					this.OnNewRecordsAddedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecordsClosed", DbType="Int NOT NULL")]
		public int RecordsClosed
		{
			get
			{
				return this._RecordsClosed;
			}
			set
			{
				if ((this._RecordsClosed != value))
				{
					this.OnRecordsClosedChanging(value);
					this.SendPropertyChanging();
					this._RecordsClosed = value;
					this.SendPropertyChanged("RecordsClosed");
					this.OnRecordsClosedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SurveysCompleted", DbType="Int NOT NULL")]
		public int SurveysCompleted
		{
			get
			{
				return this._SurveysCompleted;
			}
			set
			{
				if ((this._SurveysCompleted != value))
				{
					this.OnSurveysCompletedChanging(value);
					this.SendPropertyChanging();
					this._SurveysCompleted = value;
					this.SendPropertyChanged("SurveysCompleted");
					this.OnSurveysCompletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PCObservationType", DbType="Int")]
		public System.Nullable<int> PCObservationType
		{
			get
			{
				return this._PCObservationType;
			}
			set
			{
				if ((this._PCObservationType != value))
				{
					this.OnPCObservationTypeChanging(value);
					this.SendPropertyChanging();
					this._PCObservationType = value;
					this.SendPropertyChanged("PCObservationType");
					this.OnPCObservationTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaxDaysScheduleRegister", DbType="Int")]
		public System.Nullable<int> MaxDaysScheduleRegister
		{
			get
			{
				return this._MaxDaysScheduleRegister;
			}
			set
			{
				if ((this._MaxDaysScheduleRegister != value))
				{
					this.OnMaxDaysScheduleRegisterChanging(value);
					this.SendPropertyChanging();
					this._MaxDaysScheduleRegister = value;
					this.SendPropertyChanged("MaxDaysScheduleRegister");
					this.OnMaxDaysScheduleRegisterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClosureStateByMaxDays", DbType="Int")]
		public System.Nullable<int> ClosureStateByMaxDays
		{
			get
			{
				return this._ClosureStateByMaxDays;
			}
			set
			{
				if ((this._ClosureStateByMaxDays != value))
				{
					this.OnClosureStateByMaxDaysChanging(value);
					this.SendPropertyChanging();
					this._ClosureStateByMaxDays = value;
					this.SendPropertyChanged("ClosureStateByMaxDays");
					this.OnClosureStateByMaxDaysChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaxRecalls", DbType="Int")]
		public System.Nullable<int> MaxRecalls
		{
			get
			{
				return this._MaxRecalls;
			}
			set
			{
				if ((this._MaxRecalls != value))
				{
					this.OnMaxRecallsChanging(value);
					this.SendPropertyChanging();
					this._MaxRecalls = value;
					this.SendPropertyChanged("MaxRecalls");
					this.OnMaxRecallsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClosureStateByRecalls", DbType="Int")]
		public System.Nullable<int> ClosureStateByRecalls
		{
			get
			{
				return this._ClosureStateByRecalls;
			}
			set
			{
				if ((this._ClosureStateByRecalls != value))
				{
					this.OnClosureStateByRecallsChanging(value);
					this.SendPropertyChanging();
					this._ClosureStateByRecalls = value;
					this.SendPropertyChanged("ClosureStateByRecalls");
					this.OnClosureStateByRecallsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReleaseRecordTime", DbType="Int NOT NULL")]
		public int ReleaseRecordTime
		{
			get
			{
				return this._ReleaseRecordTime;
			}
			set
			{
				if ((this._ReleaseRecordTime != value))
				{
					this.OnReleaseRecordTimeChanging(value);
					this.SendPropertyChanging();
					this._ReleaseRecordTime = value;
					this.SendPropertyChanged("ReleaseRecordTime");
					this.OnReleaseRecordTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SocialNetworkRequired", DbType="Bit NOT NULL")]
		public bool SocialNetworkRequired
		{
			get
			{
				return this._SocialNetworkRequired;
			}
			set
			{
				if ((this._SocialNetworkRequired != value))
				{
					this.OnSocialNetworkRequiredChanging(value);
					this.SendPropertyChanging();
					this._SocialNetworkRequired = value;
					this.SendPropertyChanged("SocialNetworkRequired");
					this.OnSocialNetworkRequiredChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConvertMessageToCase", DbType="Bit NOT NULL")]
		public bool ConvertMessageToCase
		{
			get
			{
				return this._ConvertMessageToCase;
			}
			set
			{
				if ((this._ConvertMessageToCase != value))
				{
					this.OnConvertMessageToCaseChanging(value);
					this.SendPropertyChanging();
					this._ConvertMessageToCase = value;
					this.SendPropertyChanged("ConvertMessageToCase");
					this.OnConvertMessageToCaseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConvertEMailsToCase", DbType="Bit NOT NULL")]
		public bool ConvertEMailsToCase
		{
			get
			{
				return this._ConvertEMailsToCase;
			}
			set
			{
				if ((this._ConvertEMailsToCase != value))
				{
					this.OnConvertEMailsToCaseChanging(value);
					this.SendPropertyChanging();
					this._ConvertEMailsToCase = value;
					this.SendPropertyChanged("ConvertEMailsToCase");
					this.OnConvertEMailsToCaseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MergeEmails", DbType="Bit NOT NULL")]
		public bool MergeEmails
		{
			get
			{
				return this._MergeEmails;
			}
			set
			{
				if ((this._MergeEmails != value))
				{
					this.OnMergeEmailsChanging(value);
					this.SendPropertyChanging();
					this._MergeEmails = value;
					this.SendPropertyChanged("MergeEmails");
					this.OnMergeEmailsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MergeSMS", DbType="Bit")]
		public System.Nullable<bool> MergeSMS
		{
			get
			{
				return this._MergeSMS;
			}
			set
			{
				if ((this._MergeSMS != value))
				{
					this.OnMergeSMSChanging(value);
					this.SendPropertyChanging();
					this._MergeSMS = value;
					this.SendPropertyChanged("MergeSMS");
					this.OnMergeSMSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConvertSMSToCase", DbType="Bit")]
		public System.Nullable<bool> ConvertSMSToCase
		{
			get
			{
				return this._ConvertSMSToCase;
			}
			set
			{
				if ((this._ConvertSMSToCase != value))
				{
					this.OnConvertSMSToCaseChanging(value);
					this.SendPropertyChanging();
					this._ConvertSMSToCase = value;
					this.SendPropertyChanged("ConvertSMSToCase");
					this.OnConvertSMSToCaseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Users_RecordSets", Storage="_Users", ThisKey="ModifiedByUserId", OtherKey="UserId", IsForeignKey=true)]
		public Users Users
		{
			get
			{
				return this._Users.Entity;
			}
			set
			{
				Users previousValue = this._Users.Entity;
				if (((previousValue != value) 
							|| (this._Users.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Users.Entity = null;
						previousValue.RecordSets.Remove(this);
					}
					this._Users.Entity = value;
					if ((value != null))
					{
						value.RecordSets.Add(this);
						this._ModifiedByUserId = value.UserId;
					}
					else
					{
						this._ModifiedByUserId = default(int);
					}
					this.SendPropertyChanged("Users");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
