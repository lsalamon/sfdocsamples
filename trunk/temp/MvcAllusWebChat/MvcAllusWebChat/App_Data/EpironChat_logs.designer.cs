#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.18408
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace EpironChatLogs
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="EpironChat_Logs")]
	public partial class EpironChat_logsDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Definiciones de métodos de extensibilidad
    partial void OnCreated();
    partial void InsertSMSConfig(SMSConfig instance);
    partial void UpdateSMSConfig(SMSConfig instance);
    partial void DeleteSMSConfig(SMSConfig instance);
    partial void InsertSMSMessage(SMSMessage instance);
    partial void UpdateSMSMessage(SMSMessage instance);
    partial void DeleteSMSMessage(SMSMessage instance);
    partial void InsertPhones(Phones instance);
    partial void UpdatePhones(Phones instance);
    partial void DeletePhones(Phones instance);
    partial void InsertChatConfig(ChatConfig instance);
    partial void UpdateChatConfig(ChatConfig instance);
    partial void DeleteChatConfig(ChatConfig instance);
    partial void InsertChatUser(ChatUser instance);
    partial void UpdateChatUser(ChatUser instance);
    partial void DeleteChatUser(ChatUser instance);
    partial void InsertChatEmailMessage(ChatEmailMessage instance);
    partial void UpdateChatEmailMessage(ChatEmailMessage instance);
    partial void DeleteChatEmailMessage(ChatEmailMessage instance);
    partial void InsertChatMailSender(ChatMailSender instance);
    partial void UpdateChatMailSender(ChatMailSender instance);
    partial void DeleteChatMailSender(ChatMailSender instance);
    partial void InsertChatMessage(ChatMessage instance);
    partial void UpdateChatMessage(ChatMessage instance);
    partial void DeleteChatMessage(ChatMessage instance);
    partial void InsertChatRoom(ChatRoom instance);
    partial void UpdateChatRoom(ChatRoom instance);
    partial void DeleteChatRoom(ChatRoom instance);
    #endregion
		
		public EpironChat_logsDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["EpironChat_LogsConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public EpironChat_logsDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public EpironChat_logsDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public EpironChat_logsDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public EpironChat_logsDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<SMSConfig> SMSConfig
		{
			get
			{
				return this.GetTable<SMSConfig>();
			}
		}
		
		public System.Data.Linq.Table<SMSMessage> SMSMessage
		{
			get
			{
				return this.GetTable<SMSMessage>();
			}
		}
		
		public System.Data.Linq.Table<Phones> Phones
		{
			get
			{
				return this.GetTable<Phones>();
			}
		}
		
		public System.Data.Linq.Table<ChatConfig> ChatConfig
		{
			get
			{
				return this.GetTable<ChatConfig>();
			}
		}
		
		public System.Data.Linq.Table<ChatUser> ChatUser
		{
			get
			{
				return this.GetTable<ChatUser>();
			}
		}
		
		public System.Data.Linq.Table<ChatEmailMessage> ChatEmailMessage
		{
			get
			{
				return this.GetTable<ChatEmailMessage>();
			}
		}
		
		public System.Data.Linq.Table<ChatMailSender> ChatMailSender
		{
			get
			{
				return this.GetTable<ChatMailSender>();
			}
		}
		
		public System.Data.Linq.Table<ChatMessage> ChatMessage
		{
			get
			{
				return this.GetTable<ChatMessage>();
			}
		}
		
		public System.Data.Linq.Table<ChatRoom> ChatRoom
		{
			get
			{
				return this.GetTable<ChatRoom>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="SMS.SMSConfig")]
	public partial class SMSConfig : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdConfig;
		
		private int _PhoneId;
		
		private string _Server;
		
		private System.Nullable<int> _Port;
		
		private string _Username;
		
		private string _Password;
		
		private string _InterfaceVersion;
		
		private System.Nullable<int> _Connect_Timeout;
		
		private System.Nullable<int> _Bind_Timeout;
		
		private System.Nullable<int> _Enquire_Interval;
		
		private string _SystemType;
		
		private string _AddressRange;
		
		private string _AddressTON;
		
		private string _AddressNPI;
		
		private System.Nullable<bool> _Enabled;
		
		private System.Nullable<System.Guid> _AccountDetailUnique;
		
		private EntityRef<Phones> _Phones;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdConfigChanging(int value);
    partial void OnIdConfigChanged();
    partial void OnPhoneIdChanging(int value);
    partial void OnPhoneIdChanged();
    partial void OnServerChanging(string value);
    partial void OnServerChanged();
    partial void OnPortChanging(System.Nullable<int> value);
    partial void OnPortChanged();
    partial void OnUsernameChanging(string value);
    partial void OnUsernameChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnInterfaceVersionChanging(string value);
    partial void OnInterfaceVersionChanged();
    partial void OnConnect_TimeoutChanging(System.Nullable<int> value);
    partial void OnConnect_TimeoutChanged();
    partial void OnBind_TimeoutChanging(System.Nullable<int> value);
    partial void OnBind_TimeoutChanged();
    partial void OnEnquire_IntervalChanging(System.Nullable<int> value);
    partial void OnEnquire_IntervalChanged();
    partial void OnSystemTypeChanging(string value);
    partial void OnSystemTypeChanged();
    partial void OnAddressRangeChanging(string value);
    partial void OnAddressRangeChanged();
    partial void OnAddressTONChanging(string value);
    partial void OnAddressTONChanged();
    partial void OnAddressNPIChanging(string value);
    partial void OnAddressNPIChanged();
    partial void OnEnabledChanging(System.Nullable<bool> value);
    partial void OnEnabledChanged();
    partial void OnAccountDetailUniqueChanging(System.Nullable<System.Guid> value);
    partial void OnAccountDetailUniqueChanged();
    #endregion
		
		public SMSConfig()
		{
			this._Phones = default(EntityRef<Phones>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdConfig", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdConfig
		{
			get
			{
				return this._IdConfig;
			}
			set
			{
				if ((this._IdConfig != value))
				{
					this.OnIdConfigChanging(value);
					this.SendPropertyChanging();
					this._IdConfig = value;
					this.SendPropertyChanged("IdConfig");
					this.OnIdConfigChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneId", DbType="Int NOT NULL")]
		public int PhoneId
		{
			get
			{
				return this._PhoneId;
			}
			set
			{
				if ((this._PhoneId != value))
				{
					if (this._Phones.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPhoneIdChanging(value);
					this.SendPropertyChanging();
					this._PhoneId = value;
					this.SendPropertyChanged("PhoneId");
					this.OnPhoneIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Server", DbType="VarChar(50)")]
		public string Server
		{
			get
			{
				return this._Server;
			}
			set
			{
				if ((this._Server != value))
				{
					this.OnServerChanging(value);
					this.SendPropertyChanging();
					this._Server = value;
					this.SendPropertyChanged("Server");
					this.OnServerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Port", DbType="Int")]
		public System.Nullable<int> Port
		{
			get
			{
				return this._Port;
			}
			set
			{
				if ((this._Port != value))
				{
					this.OnPortChanging(value);
					this.SendPropertyChanging();
					this._Port = value;
					this.SendPropertyChanged("Port");
					this.OnPortChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Username", DbType="VarChar(50)")]
		public string Username
		{
			get
			{
				return this._Username;
			}
			set
			{
				if ((this._Username != value))
				{
					this.OnUsernameChanging(value);
					this.SendPropertyChanging();
					this._Username = value;
					this.SendPropertyChanged("Username");
					this.OnUsernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="VarChar(50)")]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InterfaceVersion", DbType="VarChar(50)")]
		public string InterfaceVersion
		{
			get
			{
				return this._InterfaceVersion;
			}
			set
			{
				if ((this._InterfaceVersion != value))
				{
					this.OnInterfaceVersionChanging(value);
					this.SendPropertyChanging();
					this._InterfaceVersion = value;
					this.SendPropertyChanged("InterfaceVersion");
					this.OnInterfaceVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Connect_Timeout", DbType="Int")]
		public System.Nullable<int> Connect_Timeout
		{
			get
			{
				return this._Connect_Timeout;
			}
			set
			{
				if ((this._Connect_Timeout != value))
				{
					this.OnConnect_TimeoutChanging(value);
					this.SendPropertyChanging();
					this._Connect_Timeout = value;
					this.SendPropertyChanged("Connect_Timeout");
					this.OnConnect_TimeoutChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Bind_Timeout", DbType="Int")]
		public System.Nullable<int> Bind_Timeout
		{
			get
			{
				return this._Bind_Timeout;
			}
			set
			{
				if ((this._Bind_Timeout != value))
				{
					this.OnBind_TimeoutChanging(value);
					this.SendPropertyChanging();
					this._Bind_Timeout = value;
					this.SendPropertyChanged("Bind_Timeout");
					this.OnBind_TimeoutChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Enquire_Interval", DbType="Int")]
		public System.Nullable<int> Enquire_Interval
		{
			get
			{
				return this._Enquire_Interval;
			}
			set
			{
				if ((this._Enquire_Interval != value))
				{
					this.OnEnquire_IntervalChanging(value);
					this.SendPropertyChanging();
					this._Enquire_Interval = value;
					this.SendPropertyChanged("Enquire_Interval");
					this.OnEnquire_IntervalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SystemType", DbType="VarChar(50)")]
		public string SystemType
		{
			get
			{
				return this._SystemType;
			}
			set
			{
				if ((this._SystemType != value))
				{
					this.OnSystemTypeChanging(value);
					this.SendPropertyChanging();
					this._SystemType = value;
					this.SendPropertyChanged("SystemType");
					this.OnSystemTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddressRange", DbType="VarChar(50)")]
		public string AddressRange
		{
			get
			{
				return this._AddressRange;
			}
			set
			{
				if ((this._AddressRange != value))
				{
					this.OnAddressRangeChanging(value);
					this.SendPropertyChanging();
					this._AddressRange = value;
					this.SendPropertyChanged("AddressRange");
					this.OnAddressRangeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddressTON", DbType="VarChar(50)")]
		public string AddressTON
		{
			get
			{
				return this._AddressTON;
			}
			set
			{
				if ((this._AddressTON != value))
				{
					this.OnAddressTONChanging(value);
					this.SendPropertyChanging();
					this._AddressTON = value;
					this.SendPropertyChanged("AddressTON");
					this.OnAddressTONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddressNPI", DbType="VarChar(50)")]
		public string AddressNPI
		{
			get
			{
				return this._AddressNPI;
			}
			set
			{
				if ((this._AddressNPI != value))
				{
					this.OnAddressNPIChanging(value);
					this.SendPropertyChanging();
					this._AddressNPI = value;
					this.SendPropertyChanged("AddressNPI");
					this.OnAddressNPIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Enabled", DbType="Bit")]
		public System.Nullable<bool> Enabled
		{
			get
			{
				return this._Enabled;
			}
			set
			{
				if ((this._Enabled != value))
				{
					this.OnEnabledChanging(value);
					this.SendPropertyChanging();
					this._Enabled = value;
					this.SendPropertyChanged("Enabled");
					this.OnEnabledChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountDetailUnique", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> AccountDetailUnique
		{
			get
			{
				return this._AccountDetailUnique;
			}
			set
			{
				if ((this._AccountDetailUnique != value))
				{
					this.OnAccountDetailUniqueChanging(value);
					this.SendPropertyChanging();
					this._AccountDetailUnique = value;
					this.SendPropertyChanged("AccountDetailUnique");
					this.OnAccountDetailUniqueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Phones_SMSConfig", Storage="_Phones", ThisKey="PhoneId", OtherKey="PhoneId", IsForeignKey=true)]
		public Phones Phones
		{
			get
			{
				return this._Phones.Entity;
			}
			set
			{
				Phones previousValue = this._Phones.Entity;
				if (((previousValue != value) 
							|| (this._Phones.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Phones.Entity = null;
						previousValue.SMSConfig.Remove(this);
					}
					this._Phones.Entity = value;
					if ((value != null))
					{
						value.SMSConfig.Add(this);
						this._PhoneId = value.PhoneId;
					}
					else
					{
						this._PhoneId = default(int);
					}
					this.SendPropertyChanged("Phones");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="SMS.SMSMessage")]
	public partial class SMSMessage : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _userId;
		
		private int _HomePhone;
		
		private int _DestinationPhone;
		
		private string _Message;
		
		private System.Nullable<System.DateTime> _UpdateTime;
		
		private bool _SMSInserted;
		
		private System.Nullable<int> _ProcessId;
		
		private System.Nullable<int> _ProcessTypeId;
		
		private System.DateTime _SMSCreated;
		
		private System.Nullable<int> _userIdOrigen;
		
		private System.Nullable<int> _ProcessDetailsId;
		
		private System.Nullable<System.Guid> _AccountDetailUnique;
		
		private int _IdConfig;
		
		private System.Nullable<System.DateTime> _CheckOutTime;
		
		private System.Nullable<int> _ChatRoomStatus;
		
		private string _SessionId;
		
		private System.Nullable<int> _RecordId;
		
		private EntityRef<SMSMessage> _SMSMessage2;
		
		private EntityRef<SMSMessage> _SMSMessage1;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnuserIdChanging(int value);
    partial void OnuserIdChanged();
    partial void OnHomePhoneChanging(int value);
    partial void OnHomePhoneChanged();
    partial void OnDestinationPhoneChanging(int value);
    partial void OnDestinationPhoneChanged();
    partial void OnMessageChanging(string value);
    partial void OnMessageChanged();
    partial void OnUpdateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdateTimeChanged();
    partial void OnSMSInsertedChanging(bool value);
    partial void OnSMSInsertedChanged();
    partial void OnProcessIdChanging(System.Nullable<int> value);
    partial void OnProcessIdChanged();
    partial void OnProcessTypeIdChanging(System.Nullable<int> value);
    partial void OnProcessTypeIdChanged();
    partial void OnSMSCreatedChanging(System.DateTime value);
    partial void OnSMSCreatedChanged();
    partial void OnuserIdOrigenChanging(System.Nullable<int> value);
    partial void OnuserIdOrigenChanged();
    partial void OnProcessDetailsIdChanging(System.Nullable<int> value);
    partial void OnProcessDetailsIdChanged();
    partial void OnAccountDetailUniqueChanging(System.Nullable<System.Guid> value);
    partial void OnAccountDetailUniqueChanged();
    partial void OnIdConfigChanging(int value);
    partial void OnIdConfigChanged();
    partial void OnCheckOutTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnCheckOutTimeChanged();
    partial void OnChatRoomStatusChanging(System.Nullable<int> value);
    partial void OnChatRoomStatusChanged();
    partial void OnSessionIdChanging(string value);
    partial void OnSessionIdChanged();
    partial void OnRecordIdChanging(System.Nullable<int> value);
    partial void OnRecordIdChanged();
    #endregion
		
		public SMSMessage()
		{
			this._SMSMessage2 = default(EntityRef<SMSMessage>);
			this._SMSMessage1 = default(EntityRef<SMSMessage>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int userId
		{
			get
			{
				return this._userId;
			}
			set
			{
				if ((this._userId != value))
				{
					if (this._SMSMessage1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnuserIdChanging(value);
					this.SendPropertyChanging();
					this._userId = value;
					this.SendPropertyChanged("userId");
					this.OnuserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HomePhone", DbType="Int NOT NULL")]
		public int HomePhone
		{
			get
			{
				return this._HomePhone;
			}
			set
			{
				if ((this._HomePhone != value))
				{
					this.OnHomePhoneChanging(value);
					this.SendPropertyChanging();
					this._HomePhone = value;
					this.SendPropertyChanged("HomePhone");
					this.OnHomePhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DestinationPhone", DbType="Int NOT NULL")]
		public int DestinationPhone
		{
			get
			{
				return this._DestinationPhone;
			}
			set
			{
				if ((this._DestinationPhone != value))
				{
					this.OnDestinationPhoneChanging(value);
					this.SendPropertyChanging();
					this._DestinationPhone = value;
					this.SendPropertyChanged("DestinationPhone");
					this.OnDestinationPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Message", DbType="VarChar(MAX)")]
		public string Message
		{
			get
			{
				return this._Message;
			}
			set
			{
				if ((this._Message != value))
				{
					this.OnMessageChanging(value);
					this.SendPropertyChanging();
					this._Message = value;
					this.SendPropertyChanged("Message");
					this.OnMessageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdateTime
		{
			get
			{
				return this._UpdateTime;
			}
			set
			{
				if ((this._UpdateTime != value))
				{
					this.OnUpdateTimeChanging(value);
					this.SendPropertyChanging();
					this._UpdateTime = value;
					this.SendPropertyChanged("UpdateTime");
					this.OnUpdateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SMSInserted", DbType="Bit NOT NULL")]
		public bool SMSInserted
		{
			get
			{
				return this._SMSInserted;
			}
			set
			{
				if ((this._SMSInserted != value))
				{
					this.OnSMSInsertedChanging(value);
					this.SendPropertyChanging();
					this._SMSInserted = value;
					this.SendPropertyChanged("SMSInserted");
					this.OnSMSInsertedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProcessId", DbType="Int")]
		public System.Nullable<int> ProcessId
		{
			get
			{
				return this._ProcessId;
			}
			set
			{
				if ((this._ProcessId != value))
				{
					this.OnProcessIdChanging(value);
					this.SendPropertyChanging();
					this._ProcessId = value;
					this.SendPropertyChanged("ProcessId");
					this.OnProcessIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProcessTypeId", DbType="Int")]
		public System.Nullable<int> ProcessTypeId
		{
			get
			{
				return this._ProcessTypeId;
			}
			set
			{
				if ((this._ProcessTypeId != value))
				{
					this.OnProcessTypeIdChanging(value);
					this.SendPropertyChanging();
					this._ProcessTypeId = value;
					this.SendPropertyChanged("ProcessTypeId");
					this.OnProcessTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SMSCreated", DbType="DateTime NOT NULL")]
		public System.DateTime SMSCreated
		{
			get
			{
				return this._SMSCreated;
			}
			set
			{
				if ((this._SMSCreated != value))
				{
					this.OnSMSCreatedChanging(value);
					this.SendPropertyChanging();
					this._SMSCreated = value;
					this.SendPropertyChanged("SMSCreated");
					this.OnSMSCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userIdOrigen", DbType="Int")]
		public System.Nullable<int> userIdOrigen
		{
			get
			{
				return this._userIdOrigen;
			}
			set
			{
				if ((this._userIdOrigen != value))
				{
					this.OnuserIdOrigenChanging(value);
					this.SendPropertyChanging();
					this._userIdOrigen = value;
					this.SendPropertyChanged("userIdOrigen");
					this.OnuserIdOrigenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProcessDetailsId", DbType="Int")]
		public System.Nullable<int> ProcessDetailsId
		{
			get
			{
				return this._ProcessDetailsId;
			}
			set
			{
				if ((this._ProcessDetailsId != value))
				{
					this.OnProcessDetailsIdChanging(value);
					this.SendPropertyChanging();
					this._ProcessDetailsId = value;
					this.SendPropertyChanged("ProcessDetailsId");
					this.OnProcessDetailsIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountDetailUnique", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> AccountDetailUnique
		{
			get
			{
				return this._AccountDetailUnique;
			}
			set
			{
				if ((this._AccountDetailUnique != value))
				{
					this.OnAccountDetailUniqueChanging(value);
					this.SendPropertyChanging();
					this._AccountDetailUnique = value;
					this.SendPropertyChanged("AccountDetailUnique");
					this.OnAccountDetailUniqueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdConfig", DbType="Int NOT NULL")]
		public int IdConfig
		{
			get
			{
				return this._IdConfig;
			}
			set
			{
				if ((this._IdConfig != value))
				{
					this.OnIdConfigChanging(value);
					this.SendPropertyChanging();
					this._IdConfig = value;
					this.SendPropertyChanged("IdConfig");
					this.OnIdConfigChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckOutTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> CheckOutTime
		{
			get
			{
				return this._CheckOutTime;
			}
			set
			{
				if ((this._CheckOutTime != value))
				{
					this.OnCheckOutTimeChanging(value);
					this.SendPropertyChanging();
					this._CheckOutTime = value;
					this.SendPropertyChanged("CheckOutTime");
					this.OnCheckOutTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChatRoomStatus", DbType="Int")]
		public System.Nullable<int> ChatRoomStatus
		{
			get
			{
				return this._ChatRoomStatus;
			}
			set
			{
				if ((this._ChatRoomStatus != value))
				{
					this.OnChatRoomStatusChanging(value);
					this.SendPropertyChanging();
					this._ChatRoomStatus = value;
					this.SendPropertyChanged("ChatRoomStatus");
					this.OnChatRoomStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SessionId", DbType="VarChar(MAX)")]
		public string SessionId
		{
			get
			{
				return this._SessionId;
			}
			set
			{
				if ((this._SessionId != value))
				{
					this.OnSessionIdChanging(value);
					this.SendPropertyChanging();
					this._SessionId = value;
					this.SendPropertyChanged("SessionId");
					this.OnSessionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecordId", DbType="Int")]
		public System.Nullable<int> RecordId
		{
			get
			{
				return this._RecordId;
			}
			set
			{
				if ((this._RecordId != value))
				{
					this.OnRecordIdChanging(value);
					this.SendPropertyChanging();
					this._RecordId = value;
					this.SendPropertyChanged("RecordId");
					this.OnRecordIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SMSMessage_SMSMessage", Storage="_SMSMessage2", ThisKey="userId", OtherKey="userId", IsUnique=true, IsForeignKey=false)]
		public SMSMessage SMSMessage2
		{
			get
			{
				return this._SMSMessage2.Entity;
			}
			set
			{
				SMSMessage previousValue = this._SMSMessage2.Entity;
				if (((previousValue != value) 
							|| (this._SMSMessage2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SMSMessage2.Entity = null;
						previousValue.SMSMessage1 = null;
					}
					this._SMSMessage2.Entity = value;
					if ((value != null))
					{
						value.SMSMessage1 = this;
					}
					this.SendPropertyChanged("SMSMessage2");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SMSMessage_SMSMessage", Storage="_SMSMessage1", ThisKey="userId", OtherKey="userId", IsForeignKey=true)]
		public SMSMessage SMSMessage1
		{
			get
			{
				return this._SMSMessage1.Entity;
			}
			set
			{
				SMSMessage previousValue = this._SMSMessage1.Entity;
				if (((previousValue != value) 
							|| (this._SMSMessage1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SMSMessage1.Entity = null;
						previousValue.SMSMessage2 = null;
					}
					this._SMSMessage1.Entity = value;
					if ((value != null))
					{
						value.SMSMessage2 = this;
						this._userId = value.userId;
					}
					else
					{
						this._userId = default(int);
					}
					this.SendPropertyChanged("SMSMessage1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="SMS.Phones")]
	public partial class Phones : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PhoneId;
		
		private string _Phone;
		
		private string _PhoneCreated;
		
		private string _PhoneName;
		
		private EntitySet<SMSConfig> _SMSConfig;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPhoneIdChanging(int value);
    partial void OnPhoneIdChanged();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    partial void OnPhoneCreatedChanging(string value);
    partial void OnPhoneCreatedChanged();
    partial void OnPhoneNameChanging(string value);
    partial void OnPhoneNameChanged();
    #endregion
		
		public Phones()
		{
			this._SMSConfig = new EntitySet<SMSConfig>(new Action<SMSConfig>(this.attach_SMSConfig), new Action<SMSConfig>(this.detach_SMSConfig));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PhoneId
		{
			get
			{
				return this._PhoneId;
			}
			set
			{
				if ((this._PhoneId != value))
				{
					this.OnPhoneIdChanging(value);
					this.SendPropertyChanging();
					this._PhoneId = value;
					this.SendPropertyChanged("PhoneId");
					this.OnPhoneIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="VarChar(50)")]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this.OnPhoneChanging(value);
					this.SendPropertyChanging();
					this._Phone = value;
					this.SendPropertyChanged("Phone");
					this.OnPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneCreated", DbType="VarChar(50)")]
		public string PhoneCreated
		{
			get
			{
				return this._PhoneCreated;
			}
			set
			{
				if ((this._PhoneCreated != value))
				{
					this.OnPhoneCreatedChanging(value);
					this.SendPropertyChanging();
					this._PhoneCreated = value;
					this.SendPropertyChanged("PhoneCreated");
					this.OnPhoneCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneName", DbType="VarChar(MAX)")]
		public string PhoneName
		{
			get
			{
				return this._PhoneName;
			}
			set
			{
				if ((this._PhoneName != value))
				{
					this.OnPhoneNameChanging(value);
					this.SendPropertyChanging();
					this._PhoneName = value;
					this.SendPropertyChanged("PhoneName");
					this.OnPhoneNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Phones_SMSConfig", Storage="_SMSConfig", ThisKey="PhoneId", OtherKey="PhoneId")]
		public EntitySet<SMSConfig> SMSConfig
		{
			get
			{
				return this._SMSConfig;
			}
			set
			{
				this._SMSConfig.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SMSConfig(SMSConfig entity)
		{
			this.SendPropertyChanging();
			entity.Phones = this;
		}
		
		private void detach_SMSConfig(SMSConfig entity)
		{
			this.SendPropertyChanging();
			entity.Phones = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Chat.ChatConfig")]
	public partial class ChatConfig : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ChatConfigId;
		
		private string _ChatConfigName;
		
		private System.DateTime _ChatConfigCreated;
		
		private System.Guid _ChatConfigGuid;
		
		private System.Nullable<int> _ChatMailSenderId;
		
		private bool _ChatConfigDefault;
		
		private System.Nullable<int> _ChatConfigTimeOut;
		
		private EntitySet<ChatRoom> _ChatRoom;
		
		private EntityRef<ChatMailSender> _ChatMailSender;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnChatConfigIdChanging(int value);
    partial void OnChatConfigIdChanged();
    partial void OnChatConfigNameChanging(string value);
    partial void OnChatConfigNameChanged();
    partial void OnChatConfigCreatedChanging(System.DateTime value);
    partial void OnChatConfigCreatedChanged();
    partial void OnChatConfigGuidChanging(System.Guid value);
    partial void OnChatConfigGuidChanged();
    partial void OnChatMailSenderIdChanging(System.Nullable<int> value);
    partial void OnChatMailSenderIdChanged();
    partial void OnChatConfigDefaultChanging(bool value);
    partial void OnChatConfigDefaultChanged();
    partial void OnChatConfigTimeOutChanging(System.Nullable<int> value);
    partial void OnChatConfigTimeOutChanged();
    #endregion
		
		public ChatConfig()
		{
			this._ChatRoom = new EntitySet<ChatRoom>(new Action<ChatRoom>(this.attach_ChatRoom), new Action<ChatRoom>(this.detach_ChatRoom));
			this._ChatMailSender = default(EntityRef<ChatMailSender>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChatConfigId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ChatConfigId
		{
			get
			{
				return this._ChatConfigId;
			}
			set
			{
				if ((this._ChatConfigId != value))
				{
					this.OnChatConfigIdChanging(value);
					this.SendPropertyChanging();
					this._ChatConfigId = value;
					this.SendPropertyChanged("ChatConfigId");
					this.OnChatConfigIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChatConfigName", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string ChatConfigName
		{
			get
			{
				return this._ChatConfigName;
			}
			set
			{
				if ((this._ChatConfigName != value))
				{
					this.OnChatConfigNameChanging(value);
					this.SendPropertyChanging();
					this._ChatConfigName = value;
					this.SendPropertyChanged("ChatConfigName");
					this.OnChatConfigNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChatConfigCreated", DbType="DateTime NOT NULL")]
		public System.DateTime ChatConfigCreated
		{
			get
			{
				return this._ChatConfigCreated;
			}
			set
			{
				if ((this._ChatConfigCreated != value))
				{
					this.OnChatConfigCreatedChanging(value);
					this.SendPropertyChanging();
					this._ChatConfigCreated = value;
					this.SendPropertyChanged("ChatConfigCreated");
					this.OnChatConfigCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChatConfigGuid", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ChatConfigGuid
		{
			get
			{
				return this._ChatConfigGuid;
			}
			set
			{
				if ((this._ChatConfigGuid != value))
				{
					this.OnChatConfigGuidChanging(value);
					this.SendPropertyChanging();
					this._ChatConfigGuid = value;
					this.SendPropertyChanged("ChatConfigGuid");
					this.OnChatConfigGuidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChatMailSenderId", DbType="Int")]
		public System.Nullable<int> ChatMailSenderId
		{
			get
			{
				return this._ChatMailSenderId;
			}
			set
			{
				if ((this._ChatMailSenderId != value))
				{
					if (this._ChatMailSender.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnChatMailSenderIdChanging(value);
					this.SendPropertyChanging();
					this._ChatMailSenderId = value;
					this.SendPropertyChanged("ChatMailSenderId");
					this.OnChatMailSenderIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChatConfigDefault", DbType="Bit NOT NULL")]
		public bool ChatConfigDefault
		{
			get
			{
				return this._ChatConfigDefault;
			}
			set
			{
				if ((this._ChatConfigDefault != value))
				{
					this.OnChatConfigDefaultChanging(value);
					this.SendPropertyChanging();
					this._ChatConfigDefault = value;
					this.SendPropertyChanged("ChatConfigDefault");
					this.OnChatConfigDefaultChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChatConfigTimeOut", DbType="Int")]
		public System.Nullable<int> ChatConfigTimeOut
		{
			get
			{
				return this._ChatConfigTimeOut;
			}
			set
			{
				if ((this._ChatConfigTimeOut != value))
				{
					this.OnChatConfigTimeOutChanging(value);
					this.SendPropertyChanging();
					this._ChatConfigTimeOut = value;
					this.SendPropertyChanged("ChatConfigTimeOut");
					this.OnChatConfigTimeOutChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ChatConfig_ChatRoom", Storage="_ChatRoom", ThisKey="ChatConfigId", OtherKey="ChatConfigId")]
		public EntitySet<ChatRoom> ChatRoom
		{
			get
			{
				return this._ChatRoom;
			}
			set
			{
				this._ChatRoom.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ChatMailSender_ChatConfig", Storage="_ChatMailSender", ThisKey="ChatMailSenderId", OtherKey="ChatMailSenderId", IsForeignKey=true)]
		public ChatMailSender ChatMailSender
		{
			get
			{
				return this._ChatMailSender.Entity;
			}
			set
			{
				ChatMailSender previousValue = this._ChatMailSender.Entity;
				if (((previousValue != value) 
							|| (this._ChatMailSender.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ChatMailSender.Entity = null;
						previousValue.ChatConfig.Remove(this);
					}
					this._ChatMailSender.Entity = value;
					if ((value != null))
					{
						value.ChatConfig.Add(this);
						this._ChatMailSenderId = value.ChatMailSenderId;
					}
					else
					{
						this._ChatMailSenderId = default(Nullable<int>);
					}
					this.SendPropertyChanged("ChatMailSender");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ChatRoom(ChatRoom entity)
		{
			this.SendPropertyChanging();
			entity.ChatConfig = this;
		}
		
		private void detach_ChatRoom(ChatRoom entity)
		{
			this.SendPropertyChanging();
			entity.ChatConfig = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Chat.ChatUser")]
	public partial class ChatUser : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ChatUserId;
		
		private string _ChatUserPhone;
		
		private string _ChatUserName;
		
		private string _ChatUserEmail;
		
		private System.DateTime _ChatUserCreated;
		
		private System.Nullable<System.DateTime> _ChatUserModifiedDate;
		
		private EntitySet<ChatMessage> _ChatMessage;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnChatUserIdChanging(int value);
    partial void OnChatUserIdChanged();
    partial void OnChatUserPhoneChanging(string value);
    partial void OnChatUserPhoneChanged();
    partial void OnChatUserNameChanging(string value);
    partial void OnChatUserNameChanged();
    partial void OnChatUserEmailChanging(string value);
    partial void OnChatUserEmailChanged();
    partial void OnChatUserCreatedChanging(System.DateTime value);
    partial void OnChatUserCreatedChanged();
    partial void OnChatUserModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnChatUserModifiedDateChanged();
    #endregion
		
		public ChatUser()
		{
			this._ChatMessage = new EntitySet<ChatMessage>(new Action<ChatMessage>(this.attach_ChatMessage), new Action<ChatMessage>(this.detach_ChatMessage));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChatUserId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ChatUserId
		{
			get
			{
				return this._ChatUserId;
			}
			set
			{
				if ((this._ChatUserId != value))
				{
					this.OnChatUserIdChanging(value);
					this.SendPropertyChanging();
					this._ChatUserId = value;
					this.SendPropertyChanged("ChatUserId");
					this.OnChatUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChatUserPhone", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string ChatUserPhone
		{
			get
			{
				return this._ChatUserPhone;
			}
			set
			{
				if ((this._ChatUserPhone != value))
				{
					this.OnChatUserPhoneChanging(value);
					this.SendPropertyChanging();
					this._ChatUserPhone = value;
					this.SendPropertyChanged("ChatUserPhone");
					this.OnChatUserPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChatUserName", DbType="NVarChar(MAX)")]
		public string ChatUserName
		{
			get
			{
				return this._ChatUserName;
			}
			set
			{
				if ((this._ChatUserName != value))
				{
					this.OnChatUserNameChanging(value);
					this.SendPropertyChanging();
					this._ChatUserName = value;
					this.SendPropertyChanged("ChatUserName");
					this.OnChatUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChatUserEmail", DbType="NVarChar(MAX)")]
		public string ChatUserEmail
		{
			get
			{
				return this._ChatUserEmail;
			}
			set
			{
				if ((this._ChatUserEmail != value))
				{
					this.OnChatUserEmailChanging(value);
					this.SendPropertyChanging();
					this._ChatUserEmail = value;
					this.SendPropertyChanged("ChatUserEmail");
					this.OnChatUserEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChatUserCreated", DbType="DateTime NOT NULL")]
		public System.DateTime ChatUserCreated
		{
			get
			{
				return this._ChatUserCreated;
			}
			set
			{
				if ((this._ChatUserCreated != value))
				{
					this.OnChatUserCreatedChanging(value);
					this.SendPropertyChanging();
					this._ChatUserCreated = value;
					this.SendPropertyChanged("ChatUserCreated");
					this.OnChatUserCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChatUserModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ChatUserModifiedDate
		{
			get
			{
				return this._ChatUserModifiedDate;
			}
			set
			{
				if ((this._ChatUserModifiedDate != value))
				{
					this.OnChatUserModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ChatUserModifiedDate = value;
					this.SendPropertyChanged("ChatUserModifiedDate");
					this.OnChatUserModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ChatUser_ChatMessage", Storage="_ChatMessage", ThisKey="ChatUserId", OtherKey="ChatUserId")]
		public EntitySet<ChatMessage> ChatMessage
		{
			get
			{
				return this._ChatMessage;
			}
			set
			{
				this._ChatMessage.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ChatMessage(ChatMessage entity)
		{
			this.SendPropertyChanging();
			entity.ChatUser = this;
		}
		
		private void detach_ChatMessage(ChatMessage entity)
		{
			this.SendPropertyChanging();
			entity.ChatUser = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Chat.ChatEmailMessage")]
	public partial class ChatEmailMessage : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ChatEmailMessageId;
		
		private int _ChatRoomId;
		
		private string _EmailFrom;
		
		private string _DeliveredTo;
		
		private string _Body;
		
		private string _ErrorMessage;
		
		private string _Subject;
		
		private System.DateTime _EmailCreated;
		
		private EntityRef<ChatRoom> _ChatRoom;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnChatEmailMessageIdChanging(int value);
    partial void OnChatEmailMessageIdChanged();
    partial void OnChatRoomIdChanging(int value);
    partial void OnChatRoomIdChanged();
    partial void OnEmailFromChanging(string value);
    partial void OnEmailFromChanged();
    partial void OnDeliveredToChanging(string value);
    partial void OnDeliveredToChanged();
    partial void OnBodyChanging(string value);
    partial void OnBodyChanged();
    partial void OnErrorMessageChanging(string value);
    partial void OnErrorMessageChanged();
    partial void OnSubjectChanging(string value);
    partial void OnSubjectChanged();
    partial void OnEmailCreatedChanging(System.DateTime value);
    partial void OnEmailCreatedChanged();
    #endregion
		
		public ChatEmailMessage()
		{
			this._ChatRoom = default(EntityRef<ChatRoom>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChatEmailMessageId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ChatEmailMessageId
		{
			get
			{
				return this._ChatEmailMessageId;
			}
			set
			{
				if ((this._ChatEmailMessageId != value))
				{
					this.OnChatEmailMessageIdChanging(value);
					this.SendPropertyChanging();
					this._ChatEmailMessageId = value;
					this.SendPropertyChanged("ChatEmailMessageId");
					this.OnChatEmailMessageIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChatRoomId", DbType="Int NOT NULL")]
		public int ChatRoomId
		{
			get
			{
				return this._ChatRoomId;
			}
			set
			{
				if ((this._ChatRoomId != value))
				{
					if (this._ChatRoom.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnChatRoomIdChanging(value);
					this.SendPropertyChanging();
					this._ChatRoomId = value;
					this.SendPropertyChanged("ChatRoomId");
					this.OnChatRoomIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmailFrom", DbType="VarChar(MAX)")]
		public string EmailFrom
		{
			get
			{
				return this._EmailFrom;
			}
			set
			{
				if ((this._EmailFrom != value))
				{
					this.OnEmailFromChanging(value);
					this.SendPropertyChanging();
					this._EmailFrom = value;
					this.SendPropertyChanged("EmailFrom");
					this.OnEmailFromChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeliveredTo", DbType="VarChar(MAX)")]
		public string DeliveredTo
		{
			get
			{
				return this._DeliveredTo;
			}
			set
			{
				if ((this._DeliveredTo != value))
				{
					this.OnDeliveredToChanging(value);
					this.SendPropertyChanging();
					this._DeliveredTo = value;
					this.SendPropertyChanged("DeliveredTo");
					this.OnDeliveredToChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Body", DbType="VarChar(MAX)")]
		public string Body
		{
			get
			{
				return this._Body;
			}
			set
			{
				if ((this._Body != value))
				{
					this.OnBodyChanging(value);
					this.SendPropertyChanging();
					this._Body = value;
					this.SendPropertyChanged("Body");
					this.OnBodyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ErrorMessage", DbType="VarChar(MAX)")]
		public string ErrorMessage
		{
			get
			{
				return this._ErrorMessage;
			}
			set
			{
				if ((this._ErrorMessage != value))
				{
					this.OnErrorMessageChanging(value);
					this.SendPropertyChanging();
					this._ErrorMessage = value;
					this.SendPropertyChanged("ErrorMessage");
					this.OnErrorMessageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Subject", DbType="VarChar(500)")]
		public string Subject
		{
			get
			{
				return this._Subject;
			}
			set
			{
				if ((this._Subject != value))
				{
					this.OnSubjectChanging(value);
					this.SendPropertyChanging();
					this._Subject = value;
					this.SendPropertyChanged("Subject");
					this.OnSubjectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmailCreated", DbType="DateTime NOT NULL")]
		public System.DateTime EmailCreated
		{
			get
			{
				return this._EmailCreated;
			}
			set
			{
				if ((this._EmailCreated != value))
				{
					this.OnEmailCreatedChanging(value);
					this.SendPropertyChanging();
					this._EmailCreated = value;
					this.SendPropertyChanged("EmailCreated");
					this.OnEmailCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ChatRoom_ChatEmailMessage", Storage="_ChatRoom", ThisKey="ChatRoomId", OtherKey="ChatRoomId", IsForeignKey=true)]
		public ChatRoom ChatRoom
		{
			get
			{
				return this._ChatRoom.Entity;
			}
			set
			{
				ChatRoom previousValue = this._ChatRoom.Entity;
				if (((previousValue != value) 
							|| (this._ChatRoom.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ChatRoom.Entity = null;
						previousValue.ChatEmailMessage.Remove(this);
					}
					this._ChatRoom.Entity = value;
					if ((value != null))
					{
						value.ChatEmailMessage.Add(this);
						this._ChatRoomId = value.ChatRoomId;
					}
					else
					{
						this._ChatRoomId = default(int);
					}
					this.SendPropertyChanged("ChatRoom");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Chat.ChatMailSender")]
	public partial class ChatMailSender : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ChatMailSenderId;
		
		private string _Email;
		
		private string _Password;
		
		private string _UserName;
		
		private string _SMTPServer;
		
		private int _SMTPPort;
		
		private bool _EnableSSL;
		
		private bool _ActiveFlag;
		
		private System.DateTime _CreatedRow;
		
		private string _TagStartWith;
		
		private string _TagEndWith;
		
		private EntitySet<ChatConfig> _ChatConfig;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnChatMailSenderIdChanging(int value);
    partial void OnChatMailSenderIdChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnSMTPServerChanging(string value);
    partial void OnSMTPServerChanged();
    partial void OnSMTPPortChanging(int value);
    partial void OnSMTPPortChanged();
    partial void OnEnableSSLChanging(bool value);
    partial void OnEnableSSLChanged();
    partial void OnActiveFlagChanging(bool value);
    partial void OnActiveFlagChanged();
    partial void OnCreatedRowChanging(System.DateTime value);
    partial void OnCreatedRowChanged();
    partial void OnTagStartWithChanging(string value);
    partial void OnTagStartWithChanged();
    partial void OnTagEndWithChanging(string value);
    partial void OnTagEndWithChanged();
    #endregion
		
		public ChatMailSender()
		{
			this._ChatConfig = new EntitySet<ChatConfig>(new Action<ChatConfig>(this.attach_ChatConfig), new Action<ChatConfig>(this.detach_ChatConfig));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChatMailSenderId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ChatMailSenderId
		{
			get
			{
				return this._ChatMailSenderId;
			}
			set
			{
				if ((this._ChatMailSenderId != value))
				{
					this.OnChatMailSenderIdChanging(value);
					this.SendPropertyChanging();
					this._ChatMailSenderId = value;
					this.SendPropertyChanged("ChatMailSenderId");
					this.OnChatMailSenderIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SMTPServer", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		public string SMTPServer
		{
			get
			{
				return this._SMTPServer;
			}
			set
			{
				if ((this._SMTPServer != value))
				{
					this.OnSMTPServerChanging(value);
					this.SendPropertyChanging();
					this._SMTPServer = value;
					this.SendPropertyChanged("SMTPServer");
					this.OnSMTPServerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SMTPPort", DbType="Int NOT NULL")]
		public int SMTPPort
		{
			get
			{
				return this._SMTPPort;
			}
			set
			{
				if ((this._SMTPPort != value))
				{
					this.OnSMTPPortChanging(value);
					this.SendPropertyChanging();
					this._SMTPPort = value;
					this.SendPropertyChanged("SMTPPort");
					this.OnSMTPPortChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EnableSSL", DbType="Bit NOT NULL")]
		public bool EnableSSL
		{
			get
			{
				return this._EnableSSL;
			}
			set
			{
				if ((this._EnableSSL != value))
				{
					this.OnEnableSSLChanging(value);
					this.SendPropertyChanging();
					this._EnableSSL = value;
					this.SendPropertyChanged("EnableSSL");
					this.OnEnableSSLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActiveFlag", DbType="Bit NOT NULL")]
		public bool ActiveFlag
		{
			get
			{
				return this._ActiveFlag;
			}
			set
			{
				if ((this._ActiveFlag != value))
				{
					this.OnActiveFlagChanging(value);
					this.SendPropertyChanging();
					this._ActiveFlag = value;
					this.SendPropertyChanged("ActiveFlag");
					this.OnActiveFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedRow", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedRow
		{
			get
			{
				return this._CreatedRow;
			}
			set
			{
				if ((this._CreatedRow != value))
				{
					this.OnCreatedRowChanging(value);
					this.SendPropertyChanging();
					this._CreatedRow = value;
					this.SendPropertyChanged("CreatedRow");
					this.OnCreatedRowChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TagStartWith", DbType="VarChar(100)")]
		public string TagStartWith
		{
			get
			{
				return this._TagStartWith;
			}
			set
			{
				if ((this._TagStartWith != value))
				{
					this.OnTagStartWithChanging(value);
					this.SendPropertyChanging();
					this._TagStartWith = value;
					this.SendPropertyChanged("TagStartWith");
					this.OnTagStartWithChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TagEndWith", DbType="VarChar(100)")]
		public string TagEndWith
		{
			get
			{
				return this._TagEndWith;
			}
			set
			{
				if ((this._TagEndWith != value))
				{
					this.OnTagEndWithChanging(value);
					this.SendPropertyChanging();
					this._TagEndWith = value;
					this.SendPropertyChanged("TagEndWith");
					this.OnTagEndWithChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ChatMailSender_ChatConfig", Storage="_ChatConfig", ThisKey="ChatMailSenderId", OtherKey="ChatMailSenderId")]
		public EntitySet<ChatConfig> ChatConfig
		{
			get
			{
				return this._ChatConfig;
			}
			set
			{
				this._ChatConfig.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ChatConfig(ChatConfig entity)
		{
			this.SendPropertyChanging();
			entity.ChatMailSender = this;
		}
		
		private void detach_ChatConfig(ChatConfig entity)
		{
			this.SendPropertyChanging();
			entity.ChatMailSender = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Chat.ChatMessage")]
	public partial class ChatMessage : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ChatMessageId;
		
		private string _ChatMessage1;
		
		private System.DateTime _ChatMessageDate;
		
		private int _ChatRoomId;
		
		private int _ChatUserId;
		
		private EntityRef<ChatUser> _ChatUser;
		
		private EntityRef<ChatRoom> _ChatRoom;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnChatMessageIdChanging(int value);
    partial void OnChatMessageIdChanged();
    partial void OnChatMessage1Changing(string value);
    partial void OnChatMessage1Changed();
    partial void OnChatMessageDateChanging(System.DateTime value);
    partial void OnChatMessageDateChanged();
    partial void OnChatRoomIdChanging(int value);
    partial void OnChatRoomIdChanged();
    partial void OnChatUserIdChanging(int value);
    partial void OnChatUserIdChanged();
    #endregion
		
		public ChatMessage()
		{
			this._ChatUser = default(EntityRef<ChatUser>);
			this._ChatRoom = default(EntityRef<ChatRoom>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChatMessageId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ChatMessageId
		{
			get
			{
				return this._ChatMessageId;
			}
			set
			{
				if ((this._ChatMessageId != value))
				{
					this.OnChatMessageIdChanging(value);
					this.SendPropertyChanging();
					this._ChatMessageId = value;
					this.SendPropertyChanged("ChatMessageId");
					this.OnChatMessageIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="ChatMessage", Storage="_ChatMessage1", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string ChatMessage1
		{
			get
			{
				return this._ChatMessage1;
			}
			set
			{
				if ((this._ChatMessage1 != value))
				{
					this.OnChatMessage1Changing(value);
					this.SendPropertyChanging();
					this._ChatMessage1 = value;
					this.SendPropertyChanged("ChatMessage1");
					this.OnChatMessage1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChatMessageDate", DbType="DateTime NOT NULL")]
		public System.DateTime ChatMessageDate
		{
			get
			{
				return this._ChatMessageDate;
			}
			set
			{
				if ((this._ChatMessageDate != value))
				{
					this.OnChatMessageDateChanging(value);
					this.SendPropertyChanging();
					this._ChatMessageDate = value;
					this.SendPropertyChanged("ChatMessageDate");
					this.OnChatMessageDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChatRoomId", DbType="Int NOT NULL")]
		public int ChatRoomId
		{
			get
			{
				return this._ChatRoomId;
			}
			set
			{
				if ((this._ChatRoomId != value))
				{
					if (this._ChatRoom.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnChatRoomIdChanging(value);
					this.SendPropertyChanging();
					this._ChatRoomId = value;
					this.SendPropertyChanged("ChatRoomId");
					this.OnChatRoomIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChatUserId", DbType="Int NOT NULL")]
		public int ChatUserId
		{
			get
			{
				return this._ChatUserId;
			}
			set
			{
				if ((this._ChatUserId != value))
				{
					if (this._ChatUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnChatUserIdChanging(value);
					this.SendPropertyChanging();
					this._ChatUserId = value;
					this.SendPropertyChanged("ChatUserId");
					this.OnChatUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ChatUser_ChatMessage", Storage="_ChatUser", ThisKey="ChatUserId", OtherKey="ChatUserId", IsForeignKey=true)]
		public ChatUser ChatUser
		{
			get
			{
				return this._ChatUser.Entity;
			}
			set
			{
				ChatUser previousValue = this._ChatUser.Entity;
				if (((previousValue != value) 
							|| (this._ChatUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ChatUser.Entity = null;
						previousValue.ChatMessage.Remove(this);
					}
					this._ChatUser.Entity = value;
					if ((value != null))
					{
						value.ChatMessage.Add(this);
						this._ChatUserId = value.ChatUserId;
					}
					else
					{
						this._ChatUserId = default(int);
					}
					this.SendPropertyChanged("ChatUser");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ChatRoom_ChatMessage", Storage="_ChatRoom", ThisKey="ChatRoomId", OtherKey="ChatRoomId", IsForeignKey=true)]
		public ChatRoom ChatRoom
		{
			get
			{
				return this._ChatRoom.Entity;
			}
			set
			{
				ChatRoom previousValue = this._ChatRoom.Entity;
				if (((previousValue != value) 
							|| (this._ChatRoom.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ChatRoom.Entity = null;
						previousValue.ChatMessage.Remove(this);
					}
					this._ChatRoom.Entity = value;
					if ((value != null))
					{
						value.ChatMessage.Add(this);
						this._ChatRoomId = value.ChatRoomId;
					}
					else
					{
						this._ChatRoomId = default(int);
					}
					this.SendPropertyChanged("ChatRoom");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Chat.ChatRoom")]
	public partial class ChatRoom : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ChatRoomId;
		
		private System.Guid _ChatRoomGuid;
		
		private System.DateTime _ChatRoomCreated;
		
		private int _ChatRoomStatusId;
		
		private int _ChatConfigId;
		
		private System.Nullable<int> _RecordId;
		
		private System.Nullable<System.DateTime> _ChatRoomModifiedDate;
		
		private System.Nullable<int> _ChatRoomTTL;
		
		private EntitySet<ChatEmailMessage> _ChatEmailMessage;
		
		private EntitySet<ChatMessage> _ChatMessage;
		
		private EntityRef<ChatConfig> _ChatConfig;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnChatRoomIdChanging(int value);
    partial void OnChatRoomIdChanged();
    partial void OnChatRoomGuidChanging(System.Guid value);
    partial void OnChatRoomGuidChanged();
    partial void OnChatRoomCreatedChanging(System.DateTime value);
    partial void OnChatRoomCreatedChanged();
    partial void OnChatRoomStatusIdChanging(int value);
    partial void OnChatRoomStatusIdChanged();
    partial void OnChatConfigIdChanging(int value);
    partial void OnChatConfigIdChanged();
    partial void OnRecordIdChanging(System.Nullable<int> value);
    partial void OnRecordIdChanged();
    partial void OnChatRoomModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnChatRoomModifiedDateChanged();
    partial void OnChatRoomTTLChanging(System.Nullable<int> value);
    partial void OnChatRoomTTLChanged();
    #endregion
		
		public ChatRoom()
		{
			this._ChatEmailMessage = new EntitySet<ChatEmailMessage>(new Action<ChatEmailMessage>(this.attach_ChatEmailMessage), new Action<ChatEmailMessage>(this.detach_ChatEmailMessage));
			this._ChatMessage = new EntitySet<ChatMessage>(new Action<ChatMessage>(this.attach_ChatMessage), new Action<ChatMessage>(this.detach_ChatMessage));
			this._ChatConfig = default(EntityRef<ChatConfig>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChatRoomId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ChatRoomId
		{
			get
			{
				return this._ChatRoomId;
			}
			set
			{
				if ((this._ChatRoomId != value))
				{
					this.OnChatRoomIdChanging(value);
					this.SendPropertyChanging();
					this._ChatRoomId = value;
					this.SendPropertyChanged("ChatRoomId");
					this.OnChatRoomIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChatRoomGuid", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ChatRoomGuid
		{
			get
			{
				return this._ChatRoomGuid;
			}
			set
			{
				if ((this._ChatRoomGuid != value))
				{
					this.OnChatRoomGuidChanging(value);
					this.SendPropertyChanging();
					this._ChatRoomGuid = value;
					this.SendPropertyChanged("ChatRoomGuid");
					this.OnChatRoomGuidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChatRoomCreated", DbType="DateTime NOT NULL")]
		public System.DateTime ChatRoomCreated
		{
			get
			{
				return this._ChatRoomCreated;
			}
			set
			{
				if ((this._ChatRoomCreated != value))
				{
					this.OnChatRoomCreatedChanging(value);
					this.SendPropertyChanging();
					this._ChatRoomCreated = value;
					this.SendPropertyChanged("ChatRoomCreated");
					this.OnChatRoomCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChatRoomStatusId", DbType="Int NOT NULL")]
		public int ChatRoomStatusId
		{
			get
			{
				return this._ChatRoomStatusId;
			}
			set
			{
				if ((this._ChatRoomStatusId != value))
				{
					this.OnChatRoomStatusIdChanging(value);
					this.SendPropertyChanging();
					this._ChatRoomStatusId = value;
					this.SendPropertyChanged("ChatRoomStatusId");
					this.OnChatRoomStatusIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChatConfigId", DbType="Int NOT NULL")]
		public int ChatConfigId
		{
			get
			{
				return this._ChatConfigId;
			}
			set
			{
				if ((this._ChatConfigId != value))
				{
					if (this._ChatConfig.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnChatConfigIdChanging(value);
					this.SendPropertyChanging();
					this._ChatConfigId = value;
					this.SendPropertyChanged("ChatConfigId");
					this.OnChatConfigIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecordId", DbType="Int")]
		public System.Nullable<int> RecordId
		{
			get
			{
				return this._RecordId;
			}
			set
			{
				if ((this._RecordId != value))
				{
					this.OnRecordIdChanging(value);
					this.SendPropertyChanging();
					this._RecordId = value;
					this.SendPropertyChanged("RecordId");
					this.OnRecordIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChatRoomModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ChatRoomModifiedDate
		{
			get
			{
				return this._ChatRoomModifiedDate;
			}
			set
			{
				if ((this._ChatRoomModifiedDate != value))
				{
					this.OnChatRoomModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ChatRoomModifiedDate = value;
					this.SendPropertyChanged("ChatRoomModifiedDate");
					this.OnChatRoomModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChatRoomTTL", DbType="Int")]
		public System.Nullable<int> ChatRoomTTL
		{
			get
			{
				return this._ChatRoomTTL;
			}
			set
			{
				if ((this._ChatRoomTTL != value))
				{
					this.OnChatRoomTTLChanging(value);
					this.SendPropertyChanging();
					this._ChatRoomTTL = value;
					this.SendPropertyChanged("ChatRoomTTL");
					this.OnChatRoomTTLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ChatRoom_ChatEmailMessage", Storage="_ChatEmailMessage", ThisKey="ChatRoomId", OtherKey="ChatRoomId")]
		public EntitySet<ChatEmailMessage> ChatEmailMessage
		{
			get
			{
				return this._ChatEmailMessage;
			}
			set
			{
				this._ChatEmailMessage.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ChatRoom_ChatMessage", Storage="_ChatMessage", ThisKey="ChatRoomId", OtherKey="ChatRoomId")]
		public EntitySet<ChatMessage> ChatMessage
		{
			get
			{
				return this._ChatMessage;
			}
			set
			{
				this._ChatMessage.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ChatConfig_ChatRoom", Storage="_ChatConfig", ThisKey="ChatConfigId", OtherKey="ChatConfigId", IsForeignKey=true)]
		public ChatConfig ChatConfig
		{
			get
			{
				return this._ChatConfig.Entity;
			}
			set
			{
				ChatConfig previousValue = this._ChatConfig.Entity;
				if (((previousValue != value) 
							|| (this._ChatConfig.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ChatConfig.Entity = null;
						previousValue.ChatRoom.Remove(this);
					}
					this._ChatConfig.Entity = value;
					if ((value != null))
					{
						value.ChatRoom.Add(this);
						this._ChatConfigId = value.ChatConfigId;
					}
					else
					{
						this._ChatConfigId = default(int);
					}
					this.SendPropertyChanged("ChatConfig");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ChatEmailMessage(ChatEmailMessage entity)
		{
			this.SendPropertyChanging();
			entity.ChatRoom = this;
		}
		
		private void detach_ChatEmailMessage(ChatEmailMessage entity)
		{
			this.SendPropertyChanging();
			entity.ChatRoom = null;
		}
		
		private void attach_ChatMessage(ChatMessage entity)
		{
			this.SendPropertyChanging();
			entity.ChatRoom = this;
		}
		
		private void detach_ChatMessage(ChatMessage entity)
		{
			this.SendPropertyChanging();
			entity.ChatRoom = null;
		}
	}
}
#pragma warning restore 1591
