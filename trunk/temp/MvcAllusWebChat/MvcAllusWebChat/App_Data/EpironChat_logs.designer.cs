#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.18408
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace EpironChatLogs
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="EpironChat_Logs")]
	public partial class EpironChat_logsDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Definiciones de métodos de extensibilidad
    partial void OnCreated();
    partial void InsertSMSConfig(SMSConfig instance);
    partial void UpdateSMSConfig(SMSConfig instance);
    partial void DeleteSMSConfig(SMSConfig instance);
    partial void InsertSMSMessage(SMSMessage instance);
    partial void UpdateSMSMessage(SMSMessage instance);
    partial void DeleteSMSMessage(SMSMessage instance);
    partial void InsertPhones(Phones instance);
    partial void UpdatePhones(Phones instance);
    partial void DeletePhones(Phones instance);
    #endregion
		
		public EpironChat_logsDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["EpironChat_LogsConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public EpironChat_logsDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public EpironChat_logsDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public EpironChat_logsDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public EpironChat_logsDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<SMSConfig> SMSConfig
		{
			get
			{
				return this.GetTable<SMSConfig>();
			}
		}
		
		public System.Data.Linq.Table<SMSMessage> SMSMessage
		{
			get
			{
				return this.GetTable<SMSMessage>();
			}
		}
		
		public System.Data.Linq.Table<Phones> Phones
		{
			get
			{
				return this.GetTable<Phones>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="SMS.SMSConfig")]
	public partial class SMSConfig : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdConfig;
		
		private int _PhoneId;
		
		private string _Server;
		
		private System.Nullable<int> _Port;
		
		private string _Username;
		
		private string _Password;
		
		private string _InterfaceVersion;
		
		private System.Nullable<int> _Connect_Timeout;
		
		private System.Nullable<int> _Bind_Timeout;
		
		private System.Nullable<int> _Enquire_Interval;
		
		private string _SystemType;
		
		private string _AddressRange;
		
		private string _AddressTON;
		
		private string _AddressNPI;
		
		private System.Nullable<bool> _Enabled;
		
		private System.Nullable<System.Guid> _AccountDetailUnique;
		
		private EntityRef<Phones> _Phones;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdConfigChanging(int value);
    partial void OnIdConfigChanged();
    partial void OnPhoneIdChanging(int value);
    partial void OnPhoneIdChanged();
    partial void OnServerChanging(string value);
    partial void OnServerChanged();
    partial void OnPortChanging(System.Nullable<int> value);
    partial void OnPortChanged();
    partial void OnUsernameChanging(string value);
    partial void OnUsernameChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnInterfaceVersionChanging(string value);
    partial void OnInterfaceVersionChanged();
    partial void OnConnect_TimeoutChanging(System.Nullable<int> value);
    partial void OnConnect_TimeoutChanged();
    partial void OnBind_TimeoutChanging(System.Nullable<int> value);
    partial void OnBind_TimeoutChanged();
    partial void OnEnquire_IntervalChanging(System.Nullable<int> value);
    partial void OnEnquire_IntervalChanged();
    partial void OnSystemTypeChanging(string value);
    partial void OnSystemTypeChanged();
    partial void OnAddressRangeChanging(string value);
    partial void OnAddressRangeChanged();
    partial void OnAddressTONChanging(string value);
    partial void OnAddressTONChanged();
    partial void OnAddressNPIChanging(string value);
    partial void OnAddressNPIChanged();
    partial void OnEnabledChanging(System.Nullable<bool> value);
    partial void OnEnabledChanged();
    partial void OnAccountDetailUniqueChanging(System.Nullable<System.Guid> value);
    partial void OnAccountDetailUniqueChanged();
    #endregion
		
		public SMSConfig()
		{
			this._Phones = default(EntityRef<Phones>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdConfig", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdConfig
		{
			get
			{
				return this._IdConfig;
			}
			set
			{
				if ((this._IdConfig != value))
				{
					this.OnIdConfigChanging(value);
					this.SendPropertyChanging();
					this._IdConfig = value;
					this.SendPropertyChanged("IdConfig");
					this.OnIdConfigChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneId", DbType="Int NOT NULL")]
		public int PhoneId
		{
			get
			{
				return this._PhoneId;
			}
			set
			{
				if ((this._PhoneId != value))
				{
					if (this._Phones.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPhoneIdChanging(value);
					this.SendPropertyChanging();
					this._PhoneId = value;
					this.SendPropertyChanged("PhoneId");
					this.OnPhoneIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Server", DbType="VarChar(50)")]
		public string Server
		{
			get
			{
				return this._Server;
			}
			set
			{
				if ((this._Server != value))
				{
					this.OnServerChanging(value);
					this.SendPropertyChanging();
					this._Server = value;
					this.SendPropertyChanged("Server");
					this.OnServerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Port", DbType="Int")]
		public System.Nullable<int> Port
		{
			get
			{
				return this._Port;
			}
			set
			{
				if ((this._Port != value))
				{
					this.OnPortChanging(value);
					this.SendPropertyChanging();
					this._Port = value;
					this.SendPropertyChanged("Port");
					this.OnPortChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Username", DbType="VarChar(50)")]
		public string Username
		{
			get
			{
				return this._Username;
			}
			set
			{
				if ((this._Username != value))
				{
					this.OnUsernameChanging(value);
					this.SendPropertyChanging();
					this._Username = value;
					this.SendPropertyChanged("Username");
					this.OnUsernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="VarChar(50)")]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InterfaceVersion", DbType="VarChar(50)")]
		public string InterfaceVersion
		{
			get
			{
				return this._InterfaceVersion;
			}
			set
			{
				if ((this._InterfaceVersion != value))
				{
					this.OnInterfaceVersionChanging(value);
					this.SendPropertyChanging();
					this._InterfaceVersion = value;
					this.SendPropertyChanged("InterfaceVersion");
					this.OnInterfaceVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Connect_Timeout", DbType="Int")]
		public System.Nullable<int> Connect_Timeout
		{
			get
			{
				return this._Connect_Timeout;
			}
			set
			{
				if ((this._Connect_Timeout != value))
				{
					this.OnConnect_TimeoutChanging(value);
					this.SendPropertyChanging();
					this._Connect_Timeout = value;
					this.SendPropertyChanged("Connect_Timeout");
					this.OnConnect_TimeoutChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Bind_Timeout", DbType="Int")]
		public System.Nullable<int> Bind_Timeout
		{
			get
			{
				return this._Bind_Timeout;
			}
			set
			{
				if ((this._Bind_Timeout != value))
				{
					this.OnBind_TimeoutChanging(value);
					this.SendPropertyChanging();
					this._Bind_Timeout = value;
					this.SendPropertyChanged("Bind_Timeout");
					this.OnBind_TimeoutChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Enquire_Interval", DbType="Int")]
		public System.Nullable<int> Enquire_Interval
		{
			get
			{
				return this._Enquire_Interval;
			}
			set
			{
				if ((this._Enquire_Interval != value))
				{
					this.OnEnquire_IntervalChanging(value);
					this.SendPropertyChanging();
					this._Enquire_Interval = value;
					this.SendPropertyChanged("Enquire_Interval");
					this.OnEnquire_IntervalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SystemType", DbType="VarChar(50)")]
		public string SystemType
		{
			get
			{
				return this._SystemType;
			}
			set
			{
				if ((this._SystemType != value))
				{
					this.OnSystemTypeChanging(value);
					this.SendPropertyChanging();
					this._SystemType = value;
					this.SendPropertyChanged("SystemType");
					this.OnSystemTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddressRange", DbType="VarChar(50)")]
		public string AddressRange
		{
			get
			{
				return this._AddressRange;
			}
			set
			{
				if ((this._AddressRange != value))
				{
					this.OnAddressRangeChanging(value);
					this.SendPropertyChanging();
					this._AddressRange = value;
					this.SendPropertyChanged("AddressRange");
					this.OnAddressRangeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddressTON", DbType="VarChar(50)")]
		public string AddressTON
		{
			get
			{
				return this._AddressTON;
			}
			set
			{
				if ((this._AddressTON != value))
				{
					this.OnAddressTONChanging(value);
					this.SendPropertyChanging();
					this._AddressTON = value;
					this.SendPropertyChanged("AddressTON");
					this.OnAddressTONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddressNPI", DbType="VarChar(50)")]
		public string AddressNPI
		{
			get
			{
				return this._AddressNPI;
			}
			set
			{
				if ((this._AddressNPI != value))
				{
					this.OnAddressNPIChanging(value);
					this.SendPropertyChanging();
					this._AddressNPI = value;
					this.SendPropertyChanged("AddressNPI");
					this.OnAddressNPIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Enabled", DbType="Bit")]
		public System.Nullable<bool> Enabled
		{
			get
			{
				return this._Enabled;
			}
			set
			{
				if ((this._Enabled != value))
				{
					this.OnEnabledChanging(value);
					this.SendPropertyChanging();
					this._Enabled = value;
					this.SendPropertyChanged("Enabled");
					this.OnEnabledChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountDetailUnique", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> AccountDetailUnique
		{
			get
			{
				return this._AccountDetailUnique;
			}
			set
			{
				if ((this._AccountDetailUnique != value))
				{
					this.OnAccountDetailUniqueChanging(value);
					this.SendPropertyChanging();
					this._AccountDetailUnique = value;
					this.SendPropertyChanged("AccountDetailUnique");
					this.OnAccountDetailUniqueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Phones_SMSConfig", Storage="_Phones", ThisKey="PhoneId", OtherKey="PhoneId", IsForeignKey=true)]
		public Phones Phones
		{
			get
			{
				return this._Phones.Entity;
			}
			set
			{
				Phones previousValue = this._Phones.Entity;
				if (((previousValue != value) 
							|| (this._Phones.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Phones.Entity = null;
						previousValue.SMSConfig.Remove(this);
					}
					this._Phones.Entity = value;
					if ((value != null))
					{
						value.SMSConfig.Add(this);
						this._PhoneId = value.PhoneId;
					}
					else
					{
						this._PhoneId = default(int);
					}
					this.SendPropertyChanged("Phones");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="SMS.SMSMessage")]
	public partial class SMSMessage : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SMSId;
		
		private int _HomePhone;
		
		private int _DestinationPhone;
		
		private string _Message;
		
		private System.Nullable<System.DateTime> _UpdateTime;
		
		private bool _SMSInserted;
		
		private System.Nullable<int> _ProcessId;
		
		private System.Nullable<int> _ProcessTypeId;
		
		private System.DateTime _SMSCreated;
		
		private System.Nullable<int> _SMSIdOrigen;
		
		private System.Nullable<int> _ProcessDetailsId;
		
		private System.Nullable<System.Guid> _AccountDetailUnique;
		
		private int _IdConfig;
		
		private System.Nullable<System.DateTime> _CheckOutTime;
		
		private System.Nullable<int> _ChatRoomStatus;
		
		private string _SessionId;
		
		private System.Nullable<int> _RecordId;
		
		private EntityRef<SMSMessage> _SMSMessage2;
		
		private EntityRef<SMSMessage> _SMSMessage1;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSMSIdChanging(int value);
    partial void OnSMSIdChanged();
    partial void OnHomePhoneChanging(int value);
    partial void OnHomePhoneChanged();
    partial void OnDestinationPhoneChanging(int value);
    partial void OnDestinationPhoneChanged();
    partial void OnMessageChanging(string value);
    partial void OnMessageChanged();
    partial void OnUpdateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdateTimeChanged();
    partial void OnSMSInsertedChanging(bool value);
    partial void OnSMSInsertedChanged();
    partial void OnProcessIdChanging(System.Nullable<int> value);
    partial void OnProcessIdChanged();
    partial void OnProcessTypeIdChanging(System.Nullable<int> value);
    partial void OnProcessTypeIdChanged();
    partial void OnSMSCreatedChanging(System.DateTime value);
    partial void OnSMSCreatedChanged();
    partial void OnSMSIdOrigenChanging(System.Nullable<int> value);
    partial void OnSMSIdOrigenChanged();
    partial void OnProcessDetailsIdChanging(System.Nullable<int> value);
    partial void OnProcessDetailsIdChanged();
    partial void OnAccountDetailUniqueChanging(System.Nullable<System.Guid> value);
    partial void OnAccountDetailUniqueChanged();
    partial void OnIdConfigChanging(int value);
    partial void OnIdConfigChanged();
    partial void OnCheckOutTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnCheckOutTimeChanged();
    partial void OnChatRoomStatusChanging(System.Nullable<int> value);
    partial void OnChatRoomStatusChanged();
    partial void OnSessionIdChanging(string value);
    partial void OnSessionIdChanged();
    partial void OnRecordIdChanging(System.Nullable<int> value);
    partial void OnRecordIdChanged();
    #endregion
		
		public SMSMessage()
		{
			this._SMSMessage2 = default(EntityRef<SMSMessage>);
			this._SMSMessage1 = default(EntityRef<SMSMessage>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SMSId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int SMSId
		{
			get
			{
				return this._SMSId;
			}
			set
			{
				if ((this._SMSId != value))
				{
					if (this._SMSMessage1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSMSIdChanging(value);
					this.SendPropertyChanging();
					this._SMSId = value;
					this.SendPropertyChanged("SMSId");
					this.OnSMSIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HomePhone", DbType="Int NOT NULL")]
		public int HomePhone
		{
			get
			{
				return this._HomePhone;
			}
			set
			{
				if ((this._HomePhone != value))
				{
					this.OnHomePhoneChanging(value);
					this.SendPropertyChanging();
					this._HomePhone = value;
					this.SendPropertyChanged("HomePhone");
					this.OnHomePhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DestinationPhone", DbType="Int NOT NULL")]
		public int DestinationPhone
		{
			get
			{
				return this._DestinationPhone;
			}
			set
			{
				if ((this._DestinationPhone != value))
				{
					this.OnDestinationPhoneChanging(value);
					this.SendPropertyChanging();
					this._DestinationPhone = value;
					this.SendPropertyChanged("DestinationPhone");
					this.OnDestinationPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Message", DbType="VarChar(MAX)")]
		public string Message
		{
			get
			{
				return this._Message;
			}
			set
			{
				if ((this._Message != value))
				{
					this.OnMessageChanging(value);
					this.SendPropertyChanging();
					this._Message = value;
					this.SendPropertyChanged("Message");
					this.OnMessageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdateTime
		{
			get
			{
				return this._UpdateTime;
			}
			set
			{
				if ((this._UpdateTime != value))
				{
					this.OnUpdateTimeChanging(value);
					this.SendPropertyChanging();
					this._UpdateTime = value;
					this.SendPropertyChanged("UpdateTime");
					this.OnUpdateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SMSInserted", DbType="Bit NOT NULL")]
		public bool SMSInserted
		{
			get
			{
				return this._SMSInserted;
			}
			set
			{
				if ((this._SMSInserted != value))
				{
					this.OnSMSInsertedChanging(value);
					this.SendPropertyChanging();
					this._SMSInserted = value;
					this.SendPropertyChanged("SMSInserted");
					this.OnSMSInsertedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProcessId", DbType="Int")]
		public System.Nullable<int> ProcessId
		{
			get
			{
				return this._ProcessId;
			}
			set
			{
				if ((this._ProcessId != value))
				{
					this.OnProcessIdChanging(value);
					this.SendPropertyChanging();
					this._ProcessId = value;
					this.SendPropertyChanged("ProcessId");
					this.OnProcessIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProcessTypeId", DbType="Int")]
		public System.Nullable<int> ProcessTypeId
		{
			get
			{
				return this._ProcessTypeId;
			}
			set
			{
				if ((this._ProcessTypeId != value))
				{
					this.OnProcessTypeIdChanging(value);
					this.SendPropertyChanging();
					this._ProcessTypeId = value;
					this.SendPropertyChanged("ProcessTypeId");
					this.OnProcessTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SMSCreated", DbType="DateTime NOT NULL")]
		public System.DateTime SMSCreated
		{
			get
			{
				return this._SMSCreated;
			}
			set
			{
				if ((this._SMSCreated != value))
				{
					this.OnSMSCreatedChanging(value);
					this.SendPropertyChanging();
					this._SMSCreated = value;
					this.SendPropertyChanged("SMSCreated");
					this.OnSMSCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SMSIdOrigen", DbType="Int")]
		public System.Nullable<int> SMSIdOrigen
		{
			get
			{
				return this._SMSIdOrigen;
			}
			set
			{
				if ((this._SMSIdOrigen != value))
				{
					this.OnSMSIdOrigenChanging(value);
					this.SendPropertyChanging();
					this._SMSIdOrigen = value;
					this.SendPropertyChanged("SMSIdOrigen");
					this.OnSMSIdOrigenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProcessDetailsId", DbType="Int")]
		public System.Nullable<int> ProcessDetailsId
		{
			get
			{
				return this._ProcessDetailsId;
			}
			set
			{
				if ((this._ProcessDetailsId != value))
				{
					this.OnProcessDetailsIdChanging(value);
					this.SendPropertyChanging();
					this._ProcessDetailsId = value;
					this.SendPropertyChanged("ProcessDetailsId");
					this.OnProcessDetailsIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountDetailUnique", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> AccountDetailUnique
		{
			get
			{
				return this._AccountDetailUnique;
			}
			set
			{
				if ((this._AccountDetailUnique != value))
				{
					this.OnAccountDetailUniqueChanging(value);
					this.SendPropertyChanging();
					this._AccountDetailUnique = value;
					this.SendPropertyChanged("AccountDetailUnique");
					this.OnAccountDetailUniqueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdConfig", DbType="Int NOT NULL")]
		public int IdConfig
		{
			get
			{
				return this._IdConfig;
			}
			set
			{
				if ((this._IdConfig != value))
				{
					this.OnIdConfigChanging(value);
					this.SendPropertyChanging();
					this._IdConfig = value;
					this.SendPropertyChanged("IdConfig");
					this.OnIdConfigChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckOutTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> CheckOutTime
		{
			get
			{
				return this._CheckOutTime;
			}
			set
			{
				if ((this._CheckOutTime != value))
				{
					this.OnCheckOutTimeChanging(value);
					this.SendPropertyChanging();
					this._CheckOutTime = value;
					this.SendPropertyChanged("CheckOutTime");
					this.OnCheckOutTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChatRoomStatus", DbType="Int")]
		public System.Nullable<int> ChatRoomStatus
		{
			get
			{
				return this._ChatRoomStatus;
			}
			set
			{
				if ((this._ChatRoomStatus != value))
				{
					this.OnChatRoomStatusChanging(value);
					this.SendPropertyChanging();
					this._ChatRoomStatus = value;
					this.SendPropertyChanged("ChatRoomStatus");
					this.OnChatRoomStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SessionId", DbType="VarChar(MAX)")]
		public string SessionId
		{
			get
			{
				return this._SessionId;
			}
			set
			{
				if ((this._SessionId != value))
				{
					this.OnSessionIdChanging(value);
					this.SendPropertyChanging();
					this._SessionId = value;
					this.SendPropertyChanged("SessionId");
					this.OnSessionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecordId", DbType="Int")]
		public System.Nullable<int> RecordId
		{
			get
			{
				return this._RecordId;
			}
			set
			{
				if ((this._RecordId != value))
				{
					this.OnRecordIdChanging(value);
					this.SendPropertyChanging();
					this._RecordId = value;
					this.SendPropertyChanged("RecordId");
					this.OnRecordIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SMSMessage_SMSMessage", Storage="_SMSMessage2", ThisKey="SMSId", OtherKey="SMSId", IsUnique=true, IsForeignKey=false)]
		public SMSMessage SMSMessage2
		{
			get
			{
				return this._SMSMessage2.Entity;
			}
			set
			{
				SMSMessage previousValue = this._SMSMessage2.Entity;
				if (((previousValue != value) 
							|| (this._SMSMessage2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SMSMessage2.Entity = null;
						previousValue.SMSMessage1 = null;
					}
					this._SMSMessage2.Entity = value;
					if ((value != null))
					{
						value.SMSMessage1 = this;
					}
					this.SendPropertyChanged("SMSMessage2");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SMSMessage_SMSMessage", Storage="_SMSMessage1", ThisKey="SMSId", OtherKey="SMSId", IsForeignKey=true)]
		public SMSMessage SMSMessage1
		{
			get
			{
				return this._SMSMessage1.Entity;
			}
			set
			{
				SMSMessage previousValue = this._SMSMessage1.Entity;
				if (((previousValue != value) 
							|| (this._SMSMessage1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SMSMessage1.Entity = null;
						previousValue.SMSMessage2 = null;
					}
					this._SMSMessage1.Entity = value;
					if ((value != null))
					{
						value.SMSMessage2 = this;
						this._SMSId = value.SMSId;
					}
					else
					{
						this._SMSId = default(int);
					}
					this.SendPropertyChanged("SMSMessage1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="SMS.Phones")]
	public partial class Phones : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PhoneId;
		
		private string _Phone;
		
		private string _PhoneCreated;
		
		private string _PhoneName;
		
		private EntitySet<SMSConfig> _SMSConfig;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPhoneIdChanging(int value);
    partial void OnPhoneIdChanged();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    partial void OnPhoneCreatedChanging(string value);
    partial void OnPhoneCreatedChanged();
    partial void OnPhoneNameChanging(string value);
    partial void OnPhoneNameChanged();
    #endregion
		
		public Phones()
		{
			this._SMSConfig = new EntitySet<SMSConfig>(new Action<SMSConfig>(this.attach_SMSConfig), new Action<SMSConfig>(this.detach_SMSConfig));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PhoneId
		{
			get
			{
				return this._PhoneId;
			}
			set
			{
				if ((this._PhoneId != value))
				{
					this.OnPhoneIdChanging(value);
					this.SendPropertyChanging();
					this._PhoneId = value;
					this.SendPropertyChanged("PhoneId");
					this.OnPhoneIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="VarChar(50)")]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this.OnPhoneChanging(value);
					this.SendPropertyChanging();
					this._Phone = value;
					this.SendPropertyChanged("Phone");
					this.OnPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneCreated", DbType="VarChar(50)")]
		public string PhoneCreated
		{
			get
			{
				return this._PhoneCreated;
			}
			set
			{
				if ((this._PhoneCreated != value))
				{
					this.OnPhoneCreatedChanging(value);
					this.SendPropertyChanging();
					this._PhoneCreated = value;
					this.SendPropertyChanged("PhoneCreated");
					this.OnPhoneCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneName", DbType="VarChar(MAX)")]
		public string PhoneName
		{
			get
			{
				return this._PhoneName;
			}
			set
			{
				if ((this._PhoneName != value))
				{
					this.OnPhoneNameChanging(value);
					this.SendPropertyChanging();
					this._PhoneName = value;
					this.SendPropertyChanged("PhoneName");
					this.OnPhoneNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Phones_SMSConfig", Storage="_SMSConfig", ThisKey="PhoneId", OtherKey="PhoneId")]
		public EntitySet<SMSConfig> SMSConfig
		{
			get
			{
				return this._SMSConfig;
			}
			set
			{
				this._SMSConfig.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SMSConfig(SMSConfig entity)
		{
			this.SendPropertyChanging();
			entity.Phones = this;
		}
		
		private void detach_SMSConfig(SMSConfig entity)
		{
			this.SendPropertyChanging();
			entity.Phones = null;
		}
	}
}
#pragma warning restore 1591
