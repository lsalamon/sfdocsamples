<div id="body">
    <article style="margin: 50px;">
        <table style="margin: 5px auto;">
            <tbody data-bind="foreach: cars">
                <tr>
                    <td data-bind="text: brand"></td>
                    <td data-bind="text: model"></td>
                    <td><a href="#" data-bind="click: $parent.editcar">Edit</a></td>
                </tr>
            </tbody>
        </table>

        <section data-bind="with: current">
            <label for="brandText">Brand:</label><input type="text" id="brandText" data-bind="value: brand" /><br />
            <label for="modelText">Model:</label><input type="text" id="modelText" data-bind="value:model" /><br />
            <label for="co2Text">CO2:</label><input type="number" id="co2Text" data-bind="value: co2" />(Euro norm: <span data-bind="text: euronorm"></span>)<br />
            <label for="importDate">Import date:</label><input type="text" id="importDate" data-bind="value: importdatelocal" placeholder="DD/MM/YYYY HH:MM" /><br />
            
            <label for="optionsList">Options:</label>
            <ul id="optionsList" data-bind="foreach: options">
                <li><span data-bind="text: name"></span>&nbsp;(<span data-bind="text: catalogprice"></span>)</li>
            </ul>

            <label for="ayList">Available years:</label>
            <ul id="ayList" data-bind="foreach: availableyears">
                <li><span data-bind="text: $data"></span></li>
            </ul>

            <label for="isActiveCheck">Is active:</label><input type="checkbox" id="isActiveCheck" data-bind="checked: isactive" /><br />
            <button data-bind="enable: isDirty, click: save">Save</button>
        </section>
    </article>

    <article>
        
    </article>
</div>

@section scripts {

    <script src="http://cdn.jsdelivr.net/momentjs/2.0.0/moment.min.js"></script>
    <script src="http://ajax.aspnetcdn.com/ajax/knockout/knockout-2.2.1.js"></script>
    <script src="/Scripts/framework.js"></script>
    <script src="/Scripts/viewmodels/simplecarviewmodel.js"></script>
    <script src="/Scripts/viewmodels/optionviewmodel.js"></script>
    <script src="/Scripts/viewmodels/carviewmodel.js"></script>

    <script>

        carviewmodel.prototype.extend(function () {
            var self = this;

            //  demonstration: computed property                
            self.euronorm = ko.computed(function () {
                if (self.co2() < 100)
                    return "euro1";
                else if (self.co2() < 200)
                    return "euro2";
                else
                    return "euro3";
            });

            //  demonstration: computed property
            self.importdatelocal = ko.computed({
                read: function () {
                    if (self.importdate())
                        return moment(self.importdate()).format("DD/MM/YYYY HH:mm");
                    else
                        return "";
                },
                write: function (value) {
                    if (value)
                        self.importdate(moment(value, "DD/MM/YYYY HH:mm").toDate());
                    else
                        self.importdate(null);
                }
            })

            self.save = function() {
                var json = ko.toJSON(self);

                $.post("/CarService.svc/car", json, function (result) {
                    var car = JSON.parse(json);
                    self.setModel(car);
                });
            }
        });

        var viewmodel = function () {
            var self = this;

            self.cars = ko.observableArray();
            self.current = ko.observable();

            self.editcar = function (item) {
                $.ajax("/CarService.svc/car/" + item.id()).done(function (result) {
                    var car = JSON.parse(result);
                    var carvm = new carviewmodel();
                    carvm.isDirty = trackDirty(carvm);  // enable 'dirty' tracking
                    carvm.setModel(car);
                    self.current(carvm);
                });
            }
        }

        $(document).ready(function () {
            var vm = new viewmodel();
            ko.applyBindings(vm);

            $.ajax("/CarService.svc/list").done(function (result) {
                var list = JSON.parse(result);
                $.each(list, function (i, car) {
                    var simplevm = new simplecarviewmodel();
                    simplevm.setModel(car);
                    vm.cars.push(simplevm);
                });
            });
        });

    </script>
}
