//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3082
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ProxyClients.ServiceReference.Asyc
{
    using System.Runtime.Serialization;
    using System;
    
    
   
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="IInfo", CallbackContract=typeof(ProxyClients.ServiceReference.Asyc.IInfoCallback), SessionMode=System.ServiceModel.SessionMode.Required)]
    public interface IInfo {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, IsInitiating=false, Action="http://tempuri.org/IInfo/SendGroupMessage")]
        void SendGroupMessage(string[] colaboratosTo, string msg);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, IsInitiating=false, AsyncPattern=true, Action="http://tempuri.org/IInfo/SendGroupMessage")]
        System.IAsyncResult BeginSendGroupMessage(string[] colaboratosTo, string msg, System.AsyncCallback callback, object asyncState);
        
        void EndSendGroupMessage(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, IsInitiating=false, Action="http://tempuri.org/IInfo/SendMessage")]
        void SendMessage(string to, string msg);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, IsInitiating=false, AsyncPattern=true, Action="http://tempuri.org/IInfo/SendMessage")]
        System.IAsyncResult BeginSendMessage(string to, string msg, System.AsyncCallback callback, object asyncState);
        
        void EndSendMessage(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, IsInitiating=false, Action="http://tempuri.org/IInfo/Ping")]
        void Ping();
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, IsInitiating=false, AsyncPattern=true, Action="http://tempuri.org/IInfo/Ping")]
        System.IAsyncResult BeginPing(System.AsyncCallback callback, object asyncState);
        
        void EndPing(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(IsInitiating=false, Action="http://tempuri.org/IInfo/GetColaborators", ReplyAction="http://tempuri.org/IInfo/GetColaboratorsResponse")]
        Allus.Cnn.Common.BE.Colaborator[] GetColaborators();
        
        [System.ServiceModel.OperationContractAttribute(IsInitiating=false, AsyncPattern=true, Action="http://tempuri.org/IInfo/GetColaborators", ReplyAction="http://tempuri.org/IInfo/GetColaboratorsResponse")]
        System.IAsyncResult BeginGetColaborators(System.AsyncCallback callback, object asyncState);
        
        Allus.Cnn.Common.BE.Colaborator[] EndGetColaborators(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInfo/Connect", ReplyAction="http://tempuri.org/IInfo/ConnectResponse")]
        int Connect(Allus.Cnn.Common.BE.Colaborator name);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IInfo/Connect", ReplyAction="http://tempuri.org/IInfo/ConnectResponse")]
        System.IAsyncResult BeginConnect(Allus.Cnn.Common.BE.Colaborator name, System.AsyncCallback callback, object asyncState);
        
        int EndConnect(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, IsTerminating=true, IsInitiating=false, Action="http://tempuri.org/IInfo/Disconnect")]
        void Disconnect();
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, IsTerminating=true, IsInitiating=false, AsyncPattern=true, Action="http://tempuri.org/IInfo/Disconnect")]
        System.IAsyncResult BeginDisconnect(System.AsyncCallback callback, object asyncState);
        
        void EndDisconnect(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public interface IInfoCallback {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IInfo/Receive")]
        void Receive(Allus.Cnn.Common.BE.Colaborator sender, string message);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, AsyncPattern=true, Action="http://tempuri.org/IInfo/Receive")]
        System.IAsyncResult BeginReceive(Allus.Cnn.Common.BE.Colaborator sender, string message, System.AsyncCallback callback, object asyncState);
        
        void EndReceive(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IInfo/UserEnter")]
        void UserEnter(Allus.Cnn.Common.BE.Colaborator Colaborator);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, AsyncPattern=true, Action="http://tempuri.org/IInfo/UserEnter")]
        System.IAsyncResult BeginUserEnter(Allus.Cnn.Common.BE.Colaborator Colaborator, System.AsyncCallback callback, object asyncState);
        
        void EndUserEnter(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IInfo/UserLeave")]
        void UserLeave(Allus.Cnn.Common.BE.Colaborator Colaborator);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, AsyncPattern=true, Action="http://tempuri.org/IInfo/UserLeave")]
        System.IAsyncResult BeginUserLeave(Allus.Cnn.Common.BE.Colaborator Colaborator, System.AsyncCallback callback, object asyncState);
        
        void EndUserLeave(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public interface IInfoChannel : ProxyClients.ServiceReference.Asyc.IInfo, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class GetColaboratorsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetColaboratorsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Allus.Cnn.Common.BE.Colaborator[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Allus.Cnn.Common.BE.Colaborator[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class ConnectCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ConnectCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class InfoClient : System.ServiceModel.DuplexClientBase<ProxyClients.ServiceReference.Asyc.IInfo>, ProxyClients.ServiceReference.Asyc.IInfo {
        
        private BeginOperationDelegate onBeginSendGroupMessageDelegate;
        
        private EndOperationDelegate onEndSendGroupMessageDelegate;
        
        private System.Threading.SendOrPostCallback onSendGroupMessageCompletedDelegate;
        
        private BeginOperationDelegate onBeginSendMessageDelegate;
        
        private EndOperationDelegate onEndSendMessageDelegate;
        
        private System.Threading.SendOrPostCallback onSendMessageCompletedDelegate;
        
        private BeginOperationDelegate onBeginPingDelegate;
        
        private EndOperationDelegate onEndPingDelegate;
        
        private System.Threading.SendOrPostCallback onPingCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetColaboratorsDelegate;
        
        private EndOperationDelegate onEndGetColaboratorsDelegate;
        
        private System.Threading.SendOrPostCallback onGetColaboratorsCompletedDelegate;
        
        private BeginOperationDelegate onBeginConnectDelegate;
        
        private EndOperationDelegate onEndConnectDelegate;
        
        private System.Threading.SendOrPostCallback onConnectCompletedDelegate;
        
        private BeginOperationDelegate onBeginDisconnectDelegate;
        
        private EndOperationDelegate onEndDisconnectDelegate;
        
        private System.Threading.SendOrPostCallback onDisconnectCompletedDelegate;
        
        public  InfoClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public InfoClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public InfoClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public InfoClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public InfoClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> SendGroupMessageCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> SendMessageCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> PingCompleted;
        
        public event System.EventHandler<GetColaboratorsCompletedEventArgs> GetColaboratorsCompleted;
        
        public event System.EventHandler<ConnectCompletedEventArgs> ConnectCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> DisconnectCompleted;
        
        public void SendGroupMessage(string[] colaboratosTo, string msg) {
            base.Channel.SendGroupMessage(colaboratosTo, msg);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSendGroupMessage(string[] colaboratosTo, string msg, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSendGroupMessage(colaboratosTo, msg, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndSendGroupMessage(System.IAsyncResult result) {
            base.Channel.EndSendGroupMessage(result);
        }
        
        private System.IAsyncResult OnBeginSendGroupMessage(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string[] colaboratosTo = ((string[])(inValues[0]));
            string msg = ((string)(inValues[1]));
            return this.BeginSendGroupMessage(colaboratosTo, msg, callback, asyncState);
        }
        
        private object[] OnEndSendGroupMessage(System.IAsyncResult result) {
            this.EndSendGroupMessage(result);
            return null;
        }
        
        private void OnSendGroupMessageCompleted(object state) {
            if ((this.SendGroupMessageCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SendGroupMessageCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SendGroupMessageAsync(string[] colaboratosTo, string msg) {
            this.SendGroupMessageAsync(colaboratosTo, msg, null);
        }
        
        public void SendGroupMessageAsync(string[] colaboratosTo, string msg, object userState) {
            if ((this.onBeginSendGroupMessageDelegate == null)) {
                this.onBeginSendGroupMessageDelegate = new BeginOperationDelegate(this.OnBeginSendGroupMessage);
            }
            if ((this.onEndSendGroupMessageDelegate == null)) {
                this.onEndSendGroupMessageDelegate = new EndOperationDelegate(this.OnEndSendGroupMessage);
            }
            if ((this.onSendGroupMessageCompletedDelegate == null)) {
                this.onSendGroupMessageCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSendGroupMessageCompleted);
            }
            base.InvokeAsync(this.onBeginSendGroupMessageDelegate, new object[] {
                        colaboratosTo,
                        msg}, this.onEndSendGroupMessageDelegate, this.onSendGroupMessageCompletedDelegate, userState);
        }
        
        public void SendMessage(string to, string msg) {
            base.Channel.SendMessage(to, msg);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSendMessage(string to, string msg, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSendMessage(to, msg, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndSendMessage(System.IAsyncResult result) {
            base.Channel.EndSendMessage(result);
        }
        
        private System.IAsyncResult OnBeginSendMessage(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string to = ((string)(inValues[0]));
            string msg = ((string)(inValues[1]));
            return this.BeginSendMessage(to, msg, callback, asyncState);
        }
        
        private object[] OnEndSendMessage(System.IAsyncResult result) {
            this.EndSendMessage(result);
            return null;
        }
        
        private void OnSendMessageCompleted(object state) {
            if ((this.SendMessageCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SendMessageCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SendMessageAsync(string to, string msg) {
            this.SendMessageAsync(to, msg, null);
        }
        
        public void SendMessageAsync(string to, string msg, object userState) {
            if ((this.onBeginSendMessageDelegate == null)) {
                this.onBeginSendMessageDelegate = new BeginOperationDelegate(this.OnBeginSendMessage);
            }
            if ((this.onEndSendMessageDelegate == null)) {
                this.onEndSendMessageDelegate = new EndOperationDelegate(this.OnEndSendMessage);
            }
            if ((this.onSendMessageCompletedDelegate == null)) {
                this.onSendMessageCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSendMessageCompleted);
            }
            base.InvokeAsync(this.onBeginSendMessageDelegate, new object[] {
                        to,
                        msg}, this.onEndSendMessageDelegate, this.onSendMessageCompletedDelegate, userState);
        }
        
        public void Ping() {
            base.Channel.Ping();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginPing(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginPing(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndPing(System.IAsyncResult result) {
            base.Channel.EndPing(result);
        }
        
        private System.IAsyncResult OnBeginPing(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginPing(callback, asyncState);
        }
        
        private object[] OnEndPing(System.IAsyncResult result) {
            this.EndPing(result);
            return null;
        }
        
        private void OnPingCompleted(object state) {
            if ((this.PingCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.PingCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void PingAsync() {
            this.PingAsync(null);
        }
        
        public void PingAsync(object userState) {
            if ((this.onBeginPingDelegate == null)) {
                this.onBeginPingDelegate = new BeginOperationDelegate(this.OnBeginPing);
            }
            if ((this.onEndPingDelegate == null)) {
                this.onEndPingDelegate = new EndOperationDelegate(this.OnEndPing);
            }
            if ((this.onPingCompletedDelegate == null)) {
                this.onPingCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnPingCompleted);
            }
            base.InvokeAsync(this.onBeginPingDelegate, null, this.onEndPingDelegate, this.onPingCompletedDelegate, userState);
        }
        
        public Allus.Cnn.Common.BE.Colaborator[] GetColaborators() {
            return base.Channel.GetColaborators();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetColaborators(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetColaborators(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Allus.Cnn.Common.BE.Colaborator[] EndGetColaborators(System.IAsyncResult result) {
            return base.Channel.EndGetColaborators(result);
        }
        
        private System.IAsyncResult OnBeginGetColaborators(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetColaborators(callback, asyncState);
        }
        
        private object[] OnEndGetColaborators(System.IAsyncResult result) {
            Allus.Cnn.Common.BE.Colaborator[] retVal = this.EndGetColaborators(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetColaboratorsCompleted(object state) {
            if ((this.GetColaboratorsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetColaboratorsCompleted(this, new GetColaboratorsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetColaboratorsAsync() {
            this.GetColaboratorsAsync(null);
        }
        
        public void GetColaboratorsAsync(object userState) {
            if ((this.onBeginGetColaboratorsDelegate == null)) {
                this.onBeginGetColaboratorsDelegate = new BeginOperationDelegate(this.OnBeginGetColaborators);
            }
            if ((this.onEndGetColaboratorsDelegate == null)) {
                this.onEndGetColaboratorsDelegate = new EndOperationDelegate(this.OnEndGetColaborators);
            }
            if ((this.onGetColaboratorsCompletedDelegate == null)) {
                this.onGetColaboratorsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetColaboratorsCompleted);
            }
            base.InvokeAsync(this.onBeginGetColaboratorsDelegate, null, this.onEndGetColaboratorsDelegate, this.onGetColaboratorsCompletedDelegate, userState);
        }
        
        public int Connect(Allus.Cnn.Common.BE.Colaborator name) {
            return base.Channel.Connect(name);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginConnect(Allus.Cnn.Common.BE.Colaborator name, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginConnect(name, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public int EndConnect(System.IAsyncResult result) {
            return base.Channel.EndConnect(result);
        }
        
        private System.IAsyncResult OnBeginConnect(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Allus.Cnn.Common.BE.Colaborator name = ((Allus.Cnn.Common.BE.Colaborator)(inValues[0]));
            return this.BeginConnect(name, callback, asyncState);
        }
        
        private object[] OnEndConnect(System.IAsyncResult result) {
            int retVal = this.EndConnect(result);
            return new object[] {
                    retVal};
        }
        
        private void OnConnectCompleted(object state) {
            if ((this.ConnectCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ConnectCompleted(this, new ConnectCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ConnectAsync(Allus.Cnn.Common.BE.Colaborator name) {
            this.ConnectAsync(name, null);
        }
        
        public void ConnectAsync(Allus.Cnn.Common.BE.Colaborator name, object userState) {
            if ((this.onBeginConnectDelegate == null)) {
                this.onBeginConnectDelegate = new BeginOperationDelegate(this.OnBeginConnect);
            }
            if ((this.onEndConnectDelegate == null)) {
                this.onEndConnectDelegate = new EndOperationDelegate(this.OnEndConnect);
            }
            if ((this.onConnectCompletedDelegate == null)) {
                this.onConnectCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnConnectCompleted);
            }
            base.InvokeAsync(this.onBeginConnectDelegate, new object[] {
                        name}, this.onEndConnectDelegate, this.onConnectCompletedDelegate, userState);
        }
        
        public void Disconnect() {
            base.Channel.Disconnect();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginDisconnect(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDisconnect(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndDisconnect(System.IAsyncResult result) {
            base.Channel.EndDisconnect(result);
        }
        
        private System.IAsyncResult OnBeginDisconnect(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginDisconnect(callback, asyncState);
        }
        
        private object[] OnEndDisconnect(System.IAsyncResult result) {
            this.EndDisconnect(result);
            return null;
        }
        
        private void OnDisconnectCompleted(object state) {
            if ((this.DisconnectCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DisconnectCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DisconnectAsync() {
            this.DisconnectAsync(null);
        }
        
        public void DisconnectAsync(object userState) {
            if ((this.onBeginDisconnectDelegate == null)) {
                this.onBeginDisconnectDelegate = new BeginOperationDelegate(this.OnBeginDisconnect);
            }
            if ((this.onEndDisconnectDelegate == null)) {
                this.onEndDisconnectDelegate = new EndOperationDelegate(this.OnEndDisconnect);
            }
            if ((this.onDisconnectCompletedDelegate == null)) {
                this.onDisconnectCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDisconnectCompleted);
            }
            base.InvokeAsync(this.onBeginDisconnectDelegate, null, this.onEndDisconnectDelegate, this.onDisconnectCompletedDelegate, userState);
        }
    }
}
