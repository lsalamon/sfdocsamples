// Copyright 2004, Microsoft Corporation
// Sample Code - Use restricted to terms of use defined in the accompanying license agreement (EULA.doc)

//--------------------------------------------------------------
// Autogenerated by XSDObjectGen version 1.3.6.0
// Schema file: Employee.xsd
// Creation Date: 30/08/2005 06:20:00 p.m.
//--------------------------------------------------------------

using System;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;

namespace PelsoftComponent
{

	public struct Declarations
	{
		public const string SchemaVersion = "";
	}


	[Serializable]
	[EditorBrowsable(EditorBrowsableState.Advanced)]
	public class AddressCollection : ArrayList
	{
		public Address Add(Address obj)
		{
			base.Add(obj);
			return obj;
		}

		public Address Add()
		{
			return Add(new Address());
		}

		public void Insert(int index, Address obj)
		{
			base.Insert(index, obj);
		}

		public void Remove(Address obj)
		{
			base.Remove(obj);
		}

		new public Address this[int index]
		{
			get { return (Address) base[index]; }
			set { base[index] = value; }
		}
	}



	[XmlRoot(ElementName="Employee",IsNullable=true),Serializable]
	public class Employee
	{

		[XmlElement(ElementName="FirstName",IsNullable=true,Form=XmlSchemaForm.Unqualified,DataType="string")]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public string __FirstName;
		
		[XmlIgnore]
		public string FirstName
		{ 
			get { return __FirstName; }
			set { __FirstName = value; }
		}

		[XmlElement(ElementName="LastName",IsNullable=true,Form=XmlSchemaForm.Unqualified,DataType="string")]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public string __LastName;
		
		[XmlIgnore]
		public string LastName
		{ 
			get { return __LastName; }
			set { __LastName = value; }
		}

		[XmlElement(ElementName="Title",IsNullable=true,Form=XmlSchemaForm.Unqualified,DataType="string")]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public string __Title;
		
		[XmlIgnore]
		public string Title
		{ 
			get { return __Title; }
			set { __Title = value; }
		}

		[XmlElement(ElementName="Id",IsNullable=true,Form=XmlSchemaForm.Unqualified,DataType="string")]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public string __Id;
		
		[XmlIgnore]
		public string Id
		{ 
			get { return __Id; }
			set { __Id = value; }
		}

		[XmlElement(ElementName="CellPhone",IsNullable=true,Form=XmlSchemaForm.Unqualified,DataType="string")]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public string __CellPhone;
		
		[XmlIgnore]
		public string CellPhone
		{ 
			get { return __CellPhone; }
			set { __CellPhone = value; }
		}

		[XmlElement(Type=typeof(EmployeeAddress),ElementName="EmployeeAddress",IsNullable=true,Form=XmlSchemaForm.Unqualified)]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public EmployeeAddress __EmployeeAddress;
		
		[XmlIgnore]
		public EmployeeAddress EmployeeAddress
		{
			get
			{
				if (__EmployeeAddress == null) __EmployeeAddress = new EmployeeAddress();		
				return __EmployeeAddress;
			}
			set {__EmployeeAddress = value;}
		}

		public Employee()
		{
			FirstName = string.Empty;
			LastName = string.Empty;
			Title = string.Empty;
			Id = string.Empty;
			CellPhone = string.Empty;
		}
	}


	[XmlType(TypeName="EmployeeAddress"),XmlRoot,Serializable]
	public class EmployeeAddress
	{
		[System.Runtime.InteropServices.DispIdAttribute(-4)]
		public IEnumerator GetEnumerator() 
		{
			return AddressCollection.GetEnumerator();
		}

		public Address Add(Address obj)
		{
			return AddressCollection.Add(obj);
		}

		[XmlIgnore]
		public Address this[int index]
		{
			get { return (Address) AddressCollection[index]; }
		}

		[XmlIgnore]
        public int Count 
		{
            get { return AddressCollection.Count; }
        }

        public void Clear()
		{
            AddressCollection.Clear();
        }

		public Address Remove(int index) 
		{ 
            Address obj = AddressCollection[index];
            AddressCollection.Remove(obj);
			return obj;
        }

        public void Remove(object obj)
		{
            AddressCollection.Remove(obj);
        }

		[XmlElement(Type=typeof(Address),ElementName="Address",IsNullable=true,Form=XmlSchemaForm.Unqualified)]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public AddressCollection __AddressCollection;
		
		[XmlIgnore]
		public AddressCollection AddressCollection
		{
			get
			{
				if (__AddressCollection == null) __AddressCollection = new AddressCollection();
				return __AddressCollection;
			}
			set {__AddressCollection = value;}
		}

		public EmployeeAddress()
		{
		}
	}


	[XmlType(TypeName="Address"),XmlRoot,Serializable]
	public class Address
	{

		[XmlElement(ElementName="Street",IsNullable=true,Form=XmlSchemaForm.Unqualified,DataType="string")]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public string __Street;
		
		[XmlIgnore]
		public string Street
		{ 
			get { return __Street; }
			set { __Street = value; }
		}

		[XmlElement(ElementName="City",IsNullable=true,Form=XmlSchemaForm.Unqualified,DataType="string")]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public string __City;
		
		[XmlIgnore]
		public string City
		{ 
			get { return __City; }
			set { __City = value; }
		}

		[XmlElement(ElementName="State",IsNullable=true,Form=XmlSchemaForm.Unqualified,DataType="string")]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public string __State;
		
		[XmlIgnore]
		public string State
		{ 
			get { return __State; }
			set { __State = value; }
		}

		[XmlElement(ElementName="Zip",IsNullable=true,Form=XmlSchemaForm.Unqualified,DataType="string")]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public string __Zip;
		
		[XmlIgnore]
		public string Zip
		{ 
			get { return __Zip; }
			set { __Zip = value; }
		}

		public Address()
		{
			Street = string.Empty;
			City = string.Empty;
			State = string.Empty;
			Zip = string.Empty;
		}
		public Address(string Street,string City,string State,string Zip)
		{
			__Street = Street ;
			__City	 = City  ;
			__State = State;
			__Zip	= Zip;
		}
	}
}
