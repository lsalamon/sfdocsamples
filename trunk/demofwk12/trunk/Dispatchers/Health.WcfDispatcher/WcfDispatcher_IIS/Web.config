<?xml version="1.0"?>
<configuration>
  <configSections>
    
    <section name="FwkLogging" type="Fwk.ConfigSection.LoggingSection, Fwk.Bases"/>
    <section name="FwkConfigProvider" type="Fwk.ConfigSection.ConfigProviderSection, Fwk.Bases"/>
    <section name="FwkServiceMetadata" type="Fwk.ConfigSection.ServiceProviderSection, Fwk.Bases"/>
  </configSections>
  <connectionStrings>
    <add name="health" connectionString="Data Source=192.168.1.188\SQLEXPRESS2008;Initial Catalog=Health;Persist Security Info=True;User ID=ws;Password=as" providerName="System.Data.SqlClient"/>
    <add name="HealthEntities" connectionString="metadata=res://*/Health.csdl|res://*/Health.ssdl|res://*/Health.msl;provider=System.Data.SqlClient;provider connection string=&quot;data source=192.168.1.188\SQLEXPRESS2008;initial catalog=Health;persist security info=True;user id=ws;password=as;multipleactiveresultsets=True;App=EntityFramework&quot;" providerName="System.Data.EntityClient"/>
  </connectionStrings>
  <appSettings>
    <add key="ServiceDispatcherName" value="Health WCF service"/>
    <add key="aspnet:UseTaskFriendlySynchronizationContext" value="true"/>
  </appSettings>
  <FwkServiceMetadata defaultProviderName="health">
    <Providers>
      <add name="health" type="xml" appid="" sourceinfo="\\ws2008\wwwroot\FWK_WCF_Dispatcher\Metasvc.xml" securityProviderName="sec_health"/>
    </Providers>
  </FwkServiceMetadata>
  
  <system.web>
    <customErrors mode="Off"/>
    <compilation debug="true" targetFramework="4.5"/>
    <roleManager enabled="true" cacheRolesInCookie="true" cookieName=".ASPROLES" cookieTimeout="30" cookiePath="/" cookieRequireSSL="false" cookieSlidingExpiration="true" cookieProtection="All" defaultProvider="ClientRoleProvider">
      <providers>
        <add name="sec_health" type="System.Web.Security.SqlRoleProvider" connectionStringName="health" applicationName="pelsofthealth"/>
        <add name="ClientRoleProvider" type="System.Web.ClientServices.Providers.ClientRoleProvider, System.Web.Extensions, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" serviceUri="" cacheTimeout="86400"/>
      </providers>
    </roleManager>
    <membership userIsOnlineTimeWindow="15" defaultProvider="ClientAuthenticationMembershipProvider">
      <providers>
        <add name="sec_health" type="System.Web.Security.SqlMembershipProvider" connectionStringName="health" applicationName="pelsofthealth" enablePasswordRetrieval="false" enablePasswordReset="true" requiresQuestionAndAnswer="false" requiresUniqueEmail="false" passwordFormat="Hashed" minRequiredPasswordLength="3" minRequiredNonalphanumericCharacters="0"/>
        <add name="ClientAuthenticationMembershipProvider" type="System.Web.ClientServices.Providers.ClientFormsAuthenticationMembershipProvider, System.Web.Extensions, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" serviceUri=""/>
      </providers>
    </membership>
  </system.web>
  <system.serviceModel>
    <services>
      <service behaviorConfiguration="MEXGET" name="WcfDispatcher.Service.FwkService">
        <!--USAR ESTA CONIG SI QUIERE COMPATIBILIDAD CON ANTIGUOS CLIENTE-->
        <!--<endpoint address = "service.svc"
                  binding="basicHttpBinding"  
                  contract="WcfDispatcher.Service.IFwkService"/>-->
        <endpoint binding="wsHttpBinding" contract="WcfDispatcher.Service.IFwkService"/>
        <!--<endpoint
        address = "https://ws2008/FWK_WCF_Dispatcher/Service.svc"
           bindingConfiguration="TransportSecurity"
         binding="wsHttpBinding"
         contract="WcfDispatcher.Service.IFwkService"/>-->
        <!--<endpoint address="mex" 
                  binding="mexHttpBinding"
                  contract="WcfDispatcher.Service.IFwkService"/>-->
        <host>
          <baseAddresses>
            <add baseAddress="http://localhost:8080/FwkService"/>
            <add baseAddress="http://localhost:8732/WcfDispatcher/FwkService/"/>
          </baseAddresses>
        </host>
      </service>
    </services>
    <behaviors>
      <serviceBehaviors>
        <behavior name="MEXGET">
          <serviceMetadata httpGetEnabled="True"/>
          <serviceDebug includeExceptionDetailInFaults="True"/>
        </behavior>
      </serviceBehaviors>
    </behaviors>
    <bindings>
      <wsHttpBinding>
        <binding name="TransportSecurity">
          <security mode="Transport">
            <transport clientCredentialType="None"/>
          </security>
        </binding>
      </wsHttpBinding>
    </bindings>
    <protocolMapping>
      <add binding="basicHttpsBinding" scheme="https"/>
    </protocolMapping>
    <!--multipleSiteBindingsEnabled If you may want to provide multiple base addresses that use the same protocol on the same site. 
                               This allows the same service to respond to a number of different URIs. 
                               It is also useful to create a service that has a base address for internal users and a separate base address for external users. 
                               For example: http://internal.pelsoft.com and http://www.pelsoft.com
                               -->
    <serviceHostingEnvironment aspNetCompatibilityEnabled="false" multipleSiteBindingsEnabled="true"/>
  </system.serviceModel>
  <system.webServer>
    <modules runAllManagedModulesForAllRequests="true"/>
    <!--
        To browse web app root directory during debugging, set the value below to true.
        Set to false before deployment to avoid disclosing web app folder information.
      -->
    <directoryBrowse enabled="true"/>
  </system.webServer>
</configuration>